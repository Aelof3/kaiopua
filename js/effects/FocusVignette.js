var KAIOPUA=function(a){(a.effects=a.effects||{}).FocusVignette={uniforms:{tDiffuse:{type:"t",value:0,texture:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},vingenettingOffset:{type:"f",value:1.2},vingenettingDarkening:{type:"f",value:0.64},colorOffset:{type:"f",value:0},colorFactor:{type:"f",value:0},colorBrightness:{type:"f",value:0},sampleDistance:{type:"f",value:0.4},waveFactor:{type:"f",value:0.00756},colorA:{type:"v3",value:new THREE.Vector3(1,1,1)},colorB:{type:"v3",
value:new THREE.Vector3(1,1,1)},colorC:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float vingenettingOffset;\nuniform float vingenettingDarkening;\nuniform float colorOffset;\nuniform float colorFactor;\nuniform float sampleDistance;\nuniform float colorBrightness;\nuniform float waveFactor;\nuniform vec3 colorA;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd += color = org = texture2D( tDiffuse, uv );\nvin = (uv - vec2(0.5)) * vec2(4.0);\nsample_dist =(dot( vin, vin ) * 2.0);\nf = ( waveFactor + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2(f);\nadd += tmp = texture2D( tDiffuse, uv + vec2(0.111964, 0.993712) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(0.846724, 0.532032) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(0.943883, -0.330279) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(0.330279, -0.943883) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(-0.532032, -0.846724) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(-0.993712, -0.111964) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2(-0.707107, 0.707107) * sampleSize);\nif( tmp.b < color.b ) color = tmp;\nuv = (uv - vec2(0.5)) * vec2( vingenettingOffset );\ncolor = (add / vec4(8.0));\ngl_FragColor = vec4( mix(color.rgb, color.ggg * colorFactor - vec3( vingenettingDarkening ), vec3( dot( uv, uv ))), 1.0 );\ngl_FragColor = vec4(1.0) - (vec4(1.0) - gl_FragColor) * (vec4(1.0) - gl_FragColor);\n}"};
return a}(KAIOPUA||{});
