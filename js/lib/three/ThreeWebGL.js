var THREE=THREE||{};if(!window.Int32Array)window.Int32Array=Array,window.Float32Array=Array;THREE.Color=function(b){b!==void 0&&this.setHex(b);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},setRGB:function(b,c,d){this.r=b;this.g=c;this.b=d;return this},setHSV:function(b,c,d){var e,h,k;if(d==0)this.r=this.g=this.b=0;else switch(e=Math.floor(b*6),h=b*6-e,b=d*(1-c),k=d*(1-c*h),c=d*(1-c*(1-h)),e){case 1:this.r=k;this.g=d;this.b=b;break;case 2:this.r=b;this.g=d;this.b=c;break;case 3:this.r=b;this.g=k;this.b=d;break;case 4:this.r=c;this.g=b;this.b=d;break;case 5:this.r=
d;this.g=b;this.b=k;break;case 6:case 0:this.r=d,this.g=c,this.b=b}return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.Vector2=function(b,c){this.x=b||0;this.y=c||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(b,c){this.x=b;this.y=c;return this},copy:function(b){this.x=b.x;this.y=b.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},
divideScalar:function(b){b?(this.x/=b,this.y/=b):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){var c=this.x-b.x,b=this.y-b.y;return c*c+b*b},setLength:function(b){return this.normalize().multiplyScalar(b)},
equals:function(b){return b.x==this.x&&b.y==this.y}};THREE.Vector3=function(b,c,d){this.x=b||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(b,c,d){this.x=b;this.y=c;this.z=d;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;this.z=b.z+c.z;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;this.z=
b.z-c.z;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;this.z-=b.z;return this},multiply:function(b,c){this.x=b.x*c.x;this.y=b.y*c.y;this.z=b.z*c.z;return this},multiplySelf:function(b){this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},divideSelf:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},
dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(b){return this.normalize().multiplyScalar(b)},cross:function(b,c){this.x=b.y*c.z-b.z*c.y;this.y=b.z*c.x-b.x*c.z;this.z=b.x*c.y-b.y*c.x;return this},crossSelf:function(b){return this.set(this.y*
b.z-this.z*b.y,this.z*b.x-this.x*b.z,this.x*b.y-this.y*b.x)},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){return(new THREE.Vector3).sub(this,b).lengthSq()},setPositionFromMatrix:function(b){this.x=b.n14;this.y=b.n24;this.z=b.n34},setRotationFromMatrix:function(b){var c=Math.cos(this.y);this.y=Math.asin(b.n13);Math.abs(c)>1.0E-5?(this.x=Math.atan2(-b.n23/c,b.n33/c),this.z=Math.atan2(-b.n12/c,b.n11/c)):(this.x=0,this.z=Math.atan2(b.n21,b.n22))},isZero:function(){return this.lengthSq()<
1.0E-4}};THREE.Vector4=function(b,c,d,e){this.x=b||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(b,c,d,e){this.x=b;this.y=c;this.z=d;this.w=e;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w||1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;this.z=b.z+c.z;this.w=b.w+c.w;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;this.z=b.z-c.z;this.w=
b.w-c.w;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(b){return this.normalize().multiplyScalar(b)},lerpSelf:function(b,c){this.x+=(b.x-this.x)*c;this.y+=(b.y-this.y)*c;this.z+=(b.z-this.z)*c;this.w+=(b.w-this.w)*c;return this}};THREE.Ray=function(b,c){this.origin=b||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,intersectScene:function(b){return this.intersectObjects(b.objects)},intersectObjects:function(b){var c,d,e=[];c=0;for(d=b.length;c<d;c++)e=e.concat(this.intersectObject(b[c]));e.sort(function(b,c){return b.distance-c.distance});return e},intersectObject:function(b){function c(b,c,d){var e;e=d.clone().subSelf(b).dot(c);if(e<=0)return null;b=b.clone().addSelf(c.clone().multiplyScalar(e));return d.distanceTo(b)}function d(b,c,d,e){var e=e.clone().subSelf(c),
d=d.clone().subSelf(c),h=b.clone().subSelf(c),b=e.dot(e),c=e.dot(d),e=e.dot(h),k=d.dot(d),d=d.dot(h),h=1/(b*k-c*c),k=(k*e-c*d)*h,b=(b*d-c*e)*h;return k>0&&b>0&&k+b<1}if(b instanceof THREE.Particle){var e=c(this.origin,this.direction,b.matrixWorld.getPosition());return e==null||e>b.scale.x?[]:[{distance:e,point:b.position,face:null,object:b}]}else if(b instanceof THREE.Mesh){e=c(this.origin,this.direction,b.matrixWorld.getPosition());if(e==null||e>b.geometry.boundingSphere.radius*Math.max(b.scale.x,
Math.max(b.scale.y,b.scale.z)))return[];var h,k,j,m,o,n,r,s,u,q,C=b.geometry,z=C.vertices,x=[],e=0;for(h=C.faces.length;e<h;e++)if(k=C.faces[e],u=this.origin.clone(),q=this.direction.clone(),n=b.matrixWorld,j=n.multiplyVector3(k.centroid.clone()).subSelf(u),s=j.dot(q),!(s<=0)&&(j=n.multiplyVector3(z[k.a].position.clone()),m=n.multiplyVector3(z[k.b].position.clone()),o=n.multiplyVector3(z[k.c].position.clone()),n=k instanceof THREE.Face4?n.multiplyVector3(z[k.d].position.clone()):null,r=b.matrixRotationWorld.multiplyVector3(k.normal.clone()),
s=q.dot(r),b.doubleSided||(b.flipSided?s>0:s<0)))if(s=r.dot((new THREE.Vector3).sub(j,u))/s,u=u.addSelf(q.multiplyScalar(s)),k instanceof THREE.Face3)d(u,j,m,o)&&(k={distance:this.origin.distanceTo(u),point:u,face:k,object:b},x.push(k));else if(k instanceof THREE.Face4&&(d(u,j,m,n)||d(u,m,o,n)))k={distance:this.origin.distanceTo(u),point:u,face:k,object:b},x.push(k);x.sort(function(b,c){return b.distance-c.distance});return x}else return[]}};
THREE.Rectangle=function(){function b(){k=e-c;j=h-d}var c,d,e,h,k,j,m=!0;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return k};this.getHeight=function(){return j};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return h};this.set=function(k,j,r,s){m=!1;c=k;d=j;e=r;h=s;b()};this.addPoint=function(k,j){m?(m=!1,c=k,d=j,e=k,h=j):(c=c<k?c:k,d=d<j?d:j,e=e>k?e:k,h=h>j?h:j);b()};this.add3Points=
function(k,j,r,s,u,q){m?(m=!1,c=k<r?k<u?k:u:r<u?r:u,d=j<s?j<q?j:q:s<q?s:q,e=k>r?k>u?k:u:r>u?r:u,h=j>s?j>q?j:q:s>q?s:q):(c=k<r?k<u?k<c?k:c:u<c?u:c:r<u?r<c?r:c:u<c?u:c,d=j<s?j<q?j<d?j:d:q<d?q:d:s<q?s<d?s:d:q<d?q:d,e=k>r?k>u?k>e?k:e:u>e?u:e:r>u?r>e?r:e:u>e?u:e,h=j>s?j>q?j>h?j:h:q>h?q:h:s>q?s>h?s:h:q>h?q:h);b()};this.addRectangle=function(k){m?(m=!1,c=k.getLeft(),d=k.getTop(),e=k.getRight(),h=k.getBottom()):(c=c<k.getLeft()?c:k.getLeft(),d=d<k.getTop()?d:k.getTop(),e=e>k.getRight()?e:k.getRight(),h=h>
k.getBottom()?h:k.getBottom());b()};this.inflate=function(k){c-=k;d-=k;e+=k;h+=k;b()};this.minSelf=function(k){c=c>k.getLeft()?c:k.getLeft();d=d>k.getTop()?d:k.getTop();e=e<k.getRight()?e:k.getRight();h=h<k.getBottom()?h:k.getBottom();b()};this.instersects=function(b){return Math.min(e,b.getRight())-Math.max(c,b.getLeft())>=0&&Math.min(h,b.getBottom())-Math.max(d,b.getTop())>=0};this.empty=function(){m=!0;h=e=d=c=0;b()};this.isEmpty=function(){return m}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var b,c=this.m;b=c[1];c[1]=c[3];c[3]=b;b=c[2];c[2]=c[6];c[6]=b;b=c[5];c[5]=c[7];c[7]=b;return this},transposeIntoArray:function(b){var c=this.m;b[0]=c[0];b[1]=c[3];b[2]=c[6];b[3]=c[1];b[4]=c[4];b[5]=c[7];b[6]=c[2];b[7]=c[5];b[8]=c[8];return this}};THREE.Matrix4=function(b,c,d,e,h,k,j,m,o,n,r,s,u,q,C,z){this.set(b||1,c||0,d||0,e||0,h||0,k||1,j||0,m||0,o||0,n||0,r||1,s||0,u||0,q||0,C||0,z||1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(b,c,d,e,h,k,j,m,o,n,r,s,u,q,C,z){this.n11=b;this.n12=c;this.n13=d;this.n14=e;this.n21=h;this.n22=k;this.n23=j;this.n24=m;this.n31=o;this.n32=n;this.n33=r;this.n34=s;this.n41=u;this.n42=q;this.n43=C;this.n44=z;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.set(b.n11,b.n12,b.n13,b.n14,b.n21,b.n22,b.n23,b.n24,b.n31,b.n32,b.n33,b.n34,b.n41,b.n42,b.n43,b.n44);return this},lookAt:function(b,
c,d){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,k=THREE.Matrix4.__v3;k.sub(b,c).normalize();if(k.length()===0)k.z=1;e.cross(d,k).normalize();e.length()===0&&(k.x+=1.0E-4,e.cross(d,k).normalize());h.cross(k,e).normalize();this.n11=e.x;this.n12=h.x;this.n13=k.x;this.n21=e.y;this.n22=h.y;this.n23=k.y;this.n31=e.z;this.n32=h.z;this.n33=k.z;return this},multiplyVector3:function(b){var c=b.x,d=b.y,e=b.z,h=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);b.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*h;
b.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*h;b.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*h;return b},multiplyVector4:function(b){var c=b.x,d=b.y,e=b.z,h=b.w;b.x=this.n11*c+this.n12*d+this.n13*e+this.n14*h;b.y=this.n21*c+this.n22*d+this.n23*e+this.n24*h;b.z=this.n31*c+this.n32*d+this.n33*e+this.n34*h;b.w=this.n41*c+this.n42*d+this.n43*e+this.n44*h;return b},rotateAxis:function(b){var c=b.x,d=b.y,e=b.z;b.x=c*this.n11+d*this.n12+e*this.n13;b.y=c*this.n21+d*this.n22+e*this.n23;b.z=c*this.n31+
d*this.n32+e*this.n33;b.normalize();return b},crossVector:function(b){var c=new THREE.Vector4;c.x=this.n11*b.x+this.n12*b.y+this.n13*b.z+this.n14*b.w;c.y=this.n21*b.x+this.n22*b.y+this.n23*b.z+this.n24*b.w;c.z=this.n31*b.x+this.n32*b.y+this.n33*b.z+this.n34*b.w;c.w=b.w?this.n41*b.x+this.n42*b.y+this.n43*b.z+this.n44*b.w:1;return c},multiply:function(b,c){var d=b.n11,e=b.n12,h=b.n13,k=b.n14,j=b.n21,m=b.n22,o=b.n23,n=b.n24,r=b.n31,s=b.n32,u=b.n33,q=b.n34,C=b.n41,z=b.n42,x=b.n43,F=b.n44,wa=c.n11,ca=
c.n12,ea=c.n13,U=c.n14,N=c.n21,v=c.n22,Ba=c.n23,fa=c.n24,sa=c.n31,pa=c.n32,la=c.n33,ta=c.n34,Ha=c.n41,Ca=c.n42,Da=c.n43,ma=c.n44;this.n11=d*wa+e*N+h*sa+k*Ha;this.n12=d*ca+e*v+h*pa+k*Ca;this.n13=d*ea+e*Ba+h*la+k*Da;this.n14=d*U+e*fa+h*ta+k*ma;this.n21=j*wa+m*N+o*sa+n*Ha;this.n22=j*ca+m*v+o*pa+n*Ca;this.n23=j*ea+m*Ba+o*la+n*Da;this.n24=j*U+m*fa+o*ta+n*ma;this.n31=r*wa+s*N+u*sa+q*Ha;this.n32=r*ca+s*v+u*pa+q*Ca;this.n33=r*ea+s*Ba+u*la+q*Da;this.n34=r*U+s*fa+u*ta+q*ma;this.n41=C*wa+z*N+x*sa+F*Ha;this.n42=
C*ca+z*v+x*pa+F*Ca;this.n43=C*ea+z*Ba+x*la+F*Da;this.n44=C*U+z*fa+x*ta+F*ma;return this},multiplyToArray:function(b,c,d){this.multiply(b,c);d[0]=this.n11;d[1]=this.n21;d[2]=this.n31;d[3]=this.n41;d[4]=this.n12;d[5]=this.n22;d[6]=this.n32;d[7]=this.n42;d[8]=this.n13;d[9]=this.n23;d[10]=this.n33;d[11]=this.n43;d[12]=this.n14;d[13]=this.n24;d[14]=this.n34;d[15]=this.n44;return this},multiplySelf:function(b){this.multiply(this,b);return this},multiplyScalar:function(b){this.n11*=b;this.n12*=b;this.n13*=
b;this.n14*=b;this.n21*=b;this.n22*=b;this.n23*=b;this.n24*=b;this.n31*=b;this.n32*=b;this.n33*=b;this.n34*=b;this.n41*=b;this.n42*=b;this.n43*=b;this.n44*=b;return this},determinant:function(){var b=this.n11,c=this.n12,d=this.n13,e=this.n14,h=this.n21,k=this.n22,j=this.n23,m=this.n24,o=this.n31,n=this.n32,r=this.n33,s=this.n34,u=this.n41,q=this.n42,C=this.n43,z=this.n44;return e*j*n*u-d*m*n*u-e*k*r*u+c*m*r*u+d*k*s*u-c*j*s*u-e*j*o*q+d*m*o*q+e*h*r*q-b*m*r*q-d*h*s*q+b*j*s*q+e*k*o*C-c*m*o*C-e*h*n*C+
b*m*n*C+c*h*s*C-b*k*s*C-d*k*o*z+c*j*o*z+d*h*n*z-b*j*n*z-c*h*r*z+b*k*r*z},transpose:function(){var b;b=this.n21;this.n21=this.n12;this.n12=b;b=this.n31;this.n31=this.n13;this.n13=b;b=this.n32;this.n32=this.n23;this.n23=b;b=this.n41;this.n41=this.n14;this.n14=b;b=this.n42;this.n42=this.n24;this.n24=b;b=this.n43;this.n43=this.n34;this.n43=b;return this},clone:function(){var b=new THREE.Matrix4;b.n11=this.n11;b.n12=this.n12;b.n13=this.n13;b.n14=this.n14;b.n21=this.n21;b.n22=this.n22;b.n23=this.n23;b.n24=
this.n24;b.n31=this.n31;b.n32=this.n32;b.n33=this.n33;b.n34=this.n34;b.n41=this.n41;b.n42=this.n42;b.n43=this.n43;b.n44=this.n44;return b},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=
this.n44;return this.flat},flattenToArray:function(b){b[0]=this.n11;b[1]=this.n21;b[2]=this.n31;b[3]=this.n41;b[4]=this.n12;b[5]=this.n22;b[6]=this.n32;b[7]=this.n42;b[8]=this.n13;b[9]=this.n23;b[10]=this.n33;b[11]=this.n43;b[12]=this.n14;b[13]=this.n24;b[14]=this.n34;b[15]=this.n44;return b},flattenToArrayOffset:function(b,c){b[c]=this.n11;b[c+1]=this.n21;b[c+2]=this.n31;b[c+3]=this.n41;b[c+4]=this.n12;b[c+5]=this.n22;b[c+6]=this.n32;b[c+7]=this.n42;b[c+8]=this.n13;b[c+9]=this.n23;b[c+10]=this.n33;
b[c+11]=this.n43;b[c+12]=this.n14;b[c+13]=this.n24;b[c+14]=this.n34;b[c+15]=this.n44;return b},setTranslation:function(b,c,d){this.set(1,0,0,b,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(b,c,d){this.set(b,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotationX:function(b){var c=Math.cos(b),b=Math.sin(b);this.set(1,0,0,0,0,c,-b,0,0,b,c,0,0,0,0,1);return this},setRotationY:function(b){var c=Math.cos(b),b=Math.sin(b);this.set(c,0,b,0,0,1,0,0,-b,0,c,0,0,0,0,1);return this},setRotationZ:function(b){var c=
Math.cos(b),b=Math.sin(b);this.set(c,-b,0,0,b,c,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(b,c){var d=Math.cos(c),e=Math.sin(c),h=1-d,k=b.x,j=b.y,m=b.z,o=h*k,n=h*j;this.set(o*k+d,o*j-e*m,o*m+e*j,0,o*j+e*m,n*j+d,n*m-e*k,0,o*m-e*j,n*m+e*k,h*m*m+d,0,0,0,0,1);return this},setPosition:function(b){this.n14=b.x;this.n24=b.y;this.n34=b.z;return this},getPosition:function(){if(!this.position)this.position=new THREE.Vector3;this.position.set(this.n14,this.n24,this.n34);return this.position},
getColumnX:function(){if(!this.columnX)this.columnX=new THREE.Vector3;this.columnX.set(this.n11,this.n21,this.n31);return this.columnX},getColumnY:function(){if(!this.columnY)this.columnY=new THREE.Vector3;this.columnY.set(this.n12,this.n22,this.n32);return this.columnY},getColumnZ:function(){if(!this.columnZ)this.columnZ=new THREE.Vector3;this.columnZ.set(this.n13,this.n23,this.n33);return this.columnZ},setRotationFromEuler:function(b,c){var d=b.x,e=b.y,h=b.z,k=Math.cos(d),d=Math.sin(d),j=Math.cos(e),
e=Math.sin(e),m=Math.cos(h),h=Math.sin(h);switch(c){case "YXZ":var o=j*m,n=j*h,r=e*m,s=e*h;this.n11=o+s*d;this.n12=r*d-n;this.n13=k*e;this.n21=k*h;this.n22=k*m;this.n23=-d;this.n31=n*d-r;this.n32=s+o*d;this.n33=k*j;break;case "ZXY":o=j*m;n=j*h;r=e*m;s=e*h;this.n11=o-s*d;this.n12=-k*h;this.n13=r+n*d;this.n21=n+r*d;this.n22=k*m;this.n23=s-o*d;this.n31=-k*e;this.n32=d;this.n33=k*j;break;case "ZYX":o=k*m;n=k*h;r=d*m;s=d*h;this.n11=j*m;this.n12=r*e-n;this.n13=o*e+s;this.n21=j*h;this.n22=s*e+o;this.n23=
n*e-r;this.n31=-e;this.n32=d*j;this.n33=k*j;break;case "YZX":o=k*j;n=k*e;r=d*j;s=d*e;this.n11=j*m;this.n12=s-o*h;this.n13=r*h+n;this.n21=h;this.n22=k*m;this.n23=-d*m;this.n31=-e*m;this.n32=n*h+r;this.n33=o-s*h;break;case "XZY":o=k*j;n=k*e;r=d*j;s=d*e;this.n11=j*m;this.n12=-h;this.n13=e*m;this.n21=o*h+s;this.n22=k*m;this.n23=n*h-r;this.n31=r*h-n;this.n32=d*m;this.n33=s*h+o;break;default:o=k*m,n=k*h,r=d*m,s=d*h,this.n11=j*m,this.n12=-j*h,this.n13=e,this.n21=n+r*e,this.n22=o-s*e,this.n23=-d*j,this.n31=
s-o*e,this.n32=r+n*e,this.n33=k*j}return this},setRotationFromQuaternion:function(b){var c=b.x,d=b.y,e=b.z,h=b.w,k=c+c,j=d+d,m=e+e,b=c*k,o=c*j;c*=m;var n=d*j;d*=m;e*=m;k*=h;j*=h;h*=m;this.n11=1-(n+e);this.n12=o-h;this.n13=c+j;this.n21=o+h;this.n22=1-(b+e);this.n23=d-k;this.n31=c-j;this.n32=d+k;this.n33=1-(b+n);return this},scale:function(b){var c=b.x,d=b.y,b=b.z;this.n11*=c;this.n12*=d;this.n13*=b;this.n21*=c;this.n22*=d;this.n23*=b;this.n31*=c;this.n32*=d;this.n33*=b;this.n41*=c;this.n42*=d;this.n43*=
b;return this},compose:function(b,c,d){var e=THREE.Matrix4.__m1,h=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(c);h.setScale(d.x,d.y,d.z);this.multiply(e,h);this.n14=b.x;this.n24=b.y;this.n34=b.z;return this},decompose:function(b,c,d){var e=THREE.Matrix4.__v1,h=THREE.Matrix4.__v2,k=THREE.Matrix4.__v3;e.set(this.n11,this.n21,this.n31);h.set(this.n12,this.n22,this.n32);k.set(this.n13,this.n23,this.n33);b=b instanceof THREE.Vector3?b:new THREE.Vector3;c=c instanceof THREE.Quaternion?c:
new THREE.Quaternion;d=d instanceof THREE.Vector3?d:new THREE.Vector3;d.x=e.length();d.y=h.length();d.z=k.length();b.x=this.n14;b.y=this.n24;b.z=this.n34;e=THREE.Matrix4.__m1;e.copy(this);e.n11/=d.x;e.n21/=d.x;e.n31/=d.x;e.n12/=d.y;e.n22/=d.y;e.n32/=d.y;e.n13/=d.z;e.n23/=d.z;e.n33/=d.z;c.setFromRotationMatrix(e);return[b,c,d]},extractPosition:function(b){this.n14=b.n14;this.n24=b.n24;this.n34=b.n34},extractRotation:function(b,c){var d=1/c.x,e=1/c.y,h=1/c.z;this.n11=b.n11*d;this.n21=b.n21*d;this.n31=
b.n31*d;this.n12=b.n12*e;this.n22=b.n22*e;this.n32=b.n32*e;this.n13=b.n13*h;this.n23=b.n23*h;this.n33=b.n33*h}};
THREE.Matrix4.makeInvert=function(b,c){var d=b.n11,e=b.n12,h=b.n13,k=b.n14,j=b.n21,m=b.n22,o=b.n23,n=b.n24,r=b.n31,s=b.n32,u=b.n33,q=b.n34,C=b.n41,z=b.n42,x=b.n43,F=b.n44;c===void 0&&(c=new THREE.Matrix4);c.n11=o*q*z-n*u*z+n*s*x-m*q*x-o*s*F+m*u*F;c.n12=k*u*z-h*q*z-k*s*x+e*q*x+h*s*F-e*u*F;c.n13=h*n*z-k*o*z+k*m*x-e*n*x-h*m*F+e*o*F;c.n14=k*o*s-h*n*s-k*m*u+e*n*u+h*m*q-e*o*q;c.n21=n*u*C-o*q*C-n*r*x+j*q*x+o*r*F-j*u*F;c.n22=h*q*C-k*u*C+k*r*x-d*q*x-h*r*F+d*u*F;c.n23=k*o*C-h*n*C-k*j*x+d*n*x+h*j*F-d*o*F;c.n24=
h*n*r-k*o*r+k*j*u-d*n*u-h*j*q+d*o*q;c.n31=m*q*C-n*s*C+n*r*z-j*q*z-m*r*F+j*s*F;c.n32=k*s*C-e*q*C-k*r*z+d*q*z+e*r*F-d*s*F;c.n33=h*n*C-k*m*C+k*j*z-d*n*z-e*j*F+d*m*F;c.n34=k*m*r-e*n*r-k*j*s+d*n*s+e*j*q-d*m*q;c.n41=o*s*C-m*u*C-o*r*z+j*u*z+m*r*x-j*s*x;c.n42=e*u*C-h*s*C+h*r*z-d*u*z-e*r*x+d*s*x;c.n43=h*m*C-e*o*C-h*j*z+d*o*z+e*j*x-d*m*x;c.n44=e*o*r-h*m*r+h*j*s-d*o*s-e*j*u+d*m*u;c.multiplyScalar(1/b.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(b){var c=b.m33,d=c.m,e=b.n33*b.n22-b.n32*b.n23,h=-b.n33*b.n21+b.n31*b.n23,k=b.n32*b.n21-b.n31*b.n22,j=-b.n33*b.n12+b.n32*b.n13,m=b.n33*b.n11-b.n31*b.n13,o=-b.n32*b.n11+b.n31*b.n12,n=b.n23*b.n12-b.n22*b.n13,r=-b.n23*b.n11+b.n21*b.n13,s=b.n22*b.n11-b.n21*b.n12,b=b.n11*e+b.n21*j+b.n31*n;b==0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");b=1/b;d[0]=b*e;d[1]=b*h;d[2]=b*k;d[3]=b*j;d[4]=b*m;d[5]=b*o;d[6]=b*n;d[7]=b*r;d[8]=b*s;return c};
THREE.Matrix4.makeFrustum=function(b,c,d,e,h,k){var j;j=new THREE.Matrix4;j.n11=2*h/(c-b);j.n12=0;j.n13=(c+b)/(c-b);j.n14=0;j.n21=0;j.n22=2*h/(e-d);j.n23=(e+d)/(e-d);j.n24=0;j.n31=0;j.n32=0;j.n33=-(k+h)/(k-h);j.n34=-2*k*h/(k-h);j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(b,c,d,e){var h,b=d*Math.tan(b*Math.PI/360);h=-b;return THREE.Matrix4.makeFrustum(h*c,b*c,h,b,d,e)};
THREE.Matrix4.makeOrtho=function(b,c,d,e,h,k){var j,m,o,n;j=new THREE.Matrix4;m=c-b;o=d-e;n=k-h;j.n11=2/m;j.n12=0;j.n13=0;j.n14=-((c+b)/m);j.n21=0;j.n22=2/o;j.n23=0;j.n24=-((d+e)/o);j.n31=0;j.n32=0;j.n33=-2/n;j.n34=-((k+h)/n);j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(b,c){this.matrix.rotateAxis(c);this.position.addSelf(c.multiplyScalar(b))},translateX:function(b){this.translate(b,this._vector.set(1,0,0))},translateY:function(b){this.translate(b,this._vector.set(0,1,0))},translateZ:function(b){this.translate(b,this._vector.set(0,0,1))},lookAt:function(b){this.matrix.lookAt(b,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},addChild:function(b){if(this.children.indexOf(b)===
-1){b.parent!==void 0&&b.parent.removeChild(b);b.parent=this;this.children.push(b);for(var c=this;c.parent!==void 0;)c=c.parent;c!==void 0&&c instanceof THREE.Scene&&c.addChildRecurse(b)}},removeChild:function(b){var c=this,d=this.children.indexOf(b);if(d!==-1){b.parent=void 0;for(this.children.splice(d,1);c.parent!==void 0;)c=c.parent;c!==void 0&&c instanceof THREE.Scene&&c.removeChildRecurse(b)}},getChildByName:function(b,c){var d,e,h;d=0;for(e=this.children.length;d<e;d++){h=this.children[d];if(h.name===
b)return h;if(c&&(h=h.getChildByName(b,c),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},update:function(b,c,d){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||c)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixRotationWorld.extractRotation(this.matrixWorld,this.scale),this.matrixWorldNeedsUpdate=!1,c=!0;for(var b=0,e=this.children.length;b<e;b++)this.children[b].update(this.matrixWorld,c,d)}};THREE.Object3DCount=0;
THREE.Projector=function(){function b(){var b=m[j]=m[j]||new THREE.RenderableVertex;j++;return b}function c(b,c){return c.z-b.z}var d,e,h=[],k,j,m=[],o,n,r=[],s,u=[],q,C,z=[],x,F,wa=[],ca=[],ea=[],U=new THREE.Vector4,N=new THREE.Vector4,v=new THREE.Matrix4,Ba=new THREE.Matrix4,fa=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],sa=new THREE.Vector4,pa=new THREE.Vector4;this.projectVector=function(b,c){v.multiply(c.projectionMatrix,c.matrixWorldInverse);
v.multiplyVector3(b);return b};this.unprojectVector=function(b,c){v.multiply(c.matrixWorld,THREE.Matrix4.makeInvert(c.projectionMatrix));v.multiplyVector3(b);return b};this.projectObjects=function(b,k,j){var m,o;e=ca.length=0;m=b.objects;b=0;for(k=m.length;b<k;b++){o=m[b];var n;if(!(n=!o.visible))if(n=o instanceof THREE.Mesh)if(n=o.frustumCulled){a:{n=void 0;for(var s=o.matrixWorld,q=-o.geometry.boundingSphere.radius*Math.max(o.scale.x,Math.max(o.scale.y,o.scale.z)),r=0;r<6;r++)if(n=fa[r].x*s.n14+
fa[r].y*s.n24+fa[r].z*s.n34+fa[r].w,n<=q){n=!1;break a}n=!0}n=!n}if(!n)n=h[e]=h[e]||new THREE.RenderableObject,e++,d=n,U.copy(o.position),v.multiplyVector3(U),d.object=o,d.z=U.z,ca.push(d)}j&&ca.sort(c);return ca};this.projectScene=function(d,e,h){var ca=e.near,U=e.far,ma,qa,J,G,f,T,O,R,da,K,Ja,ga,xa,Ea,S,ya,Ka;F=C=s=n=ea.length=0;e.matrixAutoUpdate&&e.update(void 0,!0);d.update(void 0,!1,e);v.multiply(e.projectionMatrix,e.matrixWorldInverse);fa[0].set(v.n41-v.n11,v.n42-v.n12,v.n43-v.n13,v.n44-v.n14);
fa[1].set(v.n41+v.n11,v.n42+v.n12,v.n43+v.n13,v.n44+v.n14);fa[2].set(v.n41+v.n21,v.n42+v.n22,v.n43+v.n23,v.n44+v.n24);fa[3].set(v.n41-v.n21,v.n42-v.n22,v.n43-v.n23,v.n44-v.n24);fa[4].set(v.n41-v.n31,v.n42-v.n32,v.n43-v.n33,v.n44-v.n34);fa[5].set(v.n41+v.n31,v.n42+v.n32,v.n43+v.n33,v.n44+v.n34);for(ma=0;ma<6;ma++)da=fa[ma],da.divideScalar(Math.sqrt(da.x*da.x+da.y*da.y+da.z*da.z));da=this.projectObjects(d,e,!0);d=0;for(ma=da.length;d<ma;d++)if(K=da[d].object,K.visible)if(Ja=K.matrixWorld,ga=K.matrixRotationWorld,
xa=K.materials,Ea=K.overdraw,j=0,K instanceof THREE.Mesh){S=K.geometry;G=S.vertices;ya=S.faces;S=S.faceVertexUvs;qa=0;for(J=G.length;qa<J;qa++)k=b(),k.positionWorld.copy(G[qa].position),Ja.multiplyVector3(k.positionWorld),k.positionScreen.copy(k.positionWorld),v.multiplyVector4(k.positionScreen),k.positionScreen.x/=k.positionScreen.w,k.positionScreen.y/=k.positionScreen.w,k.visible=k.positionScreen.z>ca&&k.positionScreen.z<U;G=0;for(qa=ya.length;G<qa;G++){J=ya[G];if(J instanceof THREE.Face3)if(f=
m[J.a],T=m[J.b],O=m[J.c],f.visible&&T.visible&&O.visible&&(K.doubleSided||K.flipSided!=(O.positionScreen.x-f.positionScreen.x)*(T.positionScreen.y-f.positionScreen.y)-(O.positionScreen.y-f.positionScreen.y)*(T.positionScreen.x-f.positionScreen.x)<0))R=r[n]=r[n]||new THREE.RenderableFace3,n++,o=R,o.v1.copy(f),o.v2.copy(T),o.v3.copy(O);else continue;else if(J instanceof THREE.Face4)if(f=m[J.a],T=m[J.b],O=m[J.c],R=m[J.d],f.visible&&T.visible&&O.visible&&R.visible&&(K.doubleSided||K.flipSided!=((R.positionScreen.x-
f.positionScreen.x)*(T.positionScreen.y-f.positionScreen.y)-(R.positionScreen.y-f.positionScreen.y)*(T.positionScreen.x-f.positionScreen.x)<0||(T.positionScreen.x-O.positionScreen.x)*(R.positionScreen.y-O.positionScreen.y)-(T.positionScreen.y-O.positionScreen.y)*(R.positionScreen.x-O.positionScreen.x)<0)))Ka=u[s]=u[s]||new THREE.RenderableFace4,s++,o=Ka,o.v1.copy(f),o.v2.copy(T),o.v3.copy(O),o.v4.copy(R);else continue;o.normalWorld.copy(J.normal);ga.multiplyVector3(o.normalWorld);o.centroidWorld.copy(J.centroid);
Ja.multiplyVector3(o.centroidWorld);o.centroidScreen.copy(o.centroidWorld);v.multiplyVector3(o.centroidScreen);O=J.vertexNormals;f=0;for(T=O.length;f<T;f++)R=o.vertexNormalsWorld[f],R.copy(O[f]),ga.multiplyVector3(R);f=0;for(T=S.length;f<T;f++)if(Ka=S[f][G]){O=0;for(R=Ka.length;O<R;O++)o.uvs[f][O]=Ka[O]}o.meshMaterials=xa;o.faceMaterials=J.materials;o.overdraw=Ea;o.z=o.centroidScreen.z;ea.push(o)}}else if(K instanceof THREE.Line){Ba.multiply(v,Ja);G=K.geometry.vertices;f=b();f.positionScreen.copy(G[0].position);
Ba.multiplyVector4(f.positionScreen);qa=1;for(J=G.length;qa<J;qa++){f=b();f.positionScreen.copy(G[qa].position);Ba.multiplyVector4(f.positionScreen);T=m[j-2];sa.copy(f.positionScreen);pa.copy(T.positionScreen);ga=sa;xa=pa;Ea=0;S=1;ya=ga.z+ga.w;var za=xa.z+xa.w,Aa=-ga.z+ga.w,ra=-xa.z+xa.w;if(ya>=0&&za>=0&&Aa>=0&&ra>=0||(ya<0&&za<0||Aa<0&&ra<0?0:(ya<0?Ea=Math.max(Ea,ya/(ya-za)):za<0&&(S=Math.min(S,ya/(ya-za))),Aa<0?Ea=Math.max(Ea,Aa/(Aa-ra)):ra<0&&(S=Math.min(S,Aa/(Aa-ra))),S<Ea?!1:(ga.lerpSelf(xa,
Ea),xa.lerpSelf(ga,1-S),!0))))sa.multiplyScalar(1/sa.w),pa.multiplyScalar(1/pa.w),Ja=z[C]=z[C]||new THREE.RenderableLine,C++,q=Ja,q.v1.positionScreen.copy(sa),q.v2.positionScreen.copy(pa),q.z=Math.max(sa.z,pa.z),q.materials=K.materials,ea.push(q)}}else if(K instanceof THREE.Particle&&(N.set(K.matrixWorld.n14,K.matrixWorld.n24,K.matrixWorld.n34,1),v.multiplyVector4(N),N.z/=N.w,N.z>0&&N.z<1))Ja=wa[F]=wa[F]||new THREE.RenderableParticle,F++,x=Ja,x.x=N.x/N.w,x.y=N.y/N.w,x.z=N.z,x.rotation=K.rotation.z,
x.scale.x=K.scale.x*Math.abs(x.x-(N.x+e.projectionMatrix.n11)/(N.w+e.projectionMatrix.n14)),x.scale.y=K.scale.y*Math.abs(x.y-(N.y+e.projectionMatrix.n22)/(N.w+e.projectionMatrix.n24)),x.materials=K.materials,ea.push(x);h&&ea.sort(c);return ea}};THREE.Quaternion=function(b,c,d,e){this.set(b||0,c||0,d||0,e!==void 0?e:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(b,c,d,e){this.x=b;this.y=c;this.z=d;this.w=e;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(b){var c=0.5*Math.PI/360,d=b.x*c,e=b.y*c,h=b.z*c,b=Math.cos(e),e=Math.sin(e),c=Math.cos(-h),h=Math.sin(-h),k=Math.cos(d),d=Math.sin(d),j=b*c,m=e*h;this.w=j*k-m*d;this.x=j*d+m*k;this.y=e*c*k+b*h*d;this.z=b*h*k-e*c*d;return this},setFromAxisAngle:function(b,c){var d=c/2,e=Math.sin(d);
this.x=b.x*e;this.y=b.y*e;this.z=b.z*e;this.w=Math.cos(d);return this},setFromRotationMatrix:function(b){var c=Math.pow(b.determinant(),1/3);this.w=Math.sqrt(Math.max(0,c+b.n11+b.n22+b.n33))/2;this.x=Math.sqrt(Math.max(0,c+b.n11-b.n22-b.n33))/2;this.y=Math.sqrt(Math.max(0,c-b.n11+b.n22-b.n33))/2;this.z=Math.sqrt(Math.max(0,c-b.n11-b.n22+b.n33))/2;this.x=b.n32-b.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=b.n13-b.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=b.n21-b.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);b==0?this.w=this.z=this.y=this.x=0:(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},multiplySelf:function(b){var c=
this.x,d=this.y,e=this.z,h=this.w,k=b.x,j=b.y,m=b.z,b=b.w;this.x=c*b+h*k+d*m-e*j;this.y=d*b+h*j+e*k-c*m;this.z=e*b+h*m+c*j-d*k;this.w=h*b-c*k-d*j-e*m;return this},multiply:function(b,c){this.x=b.x*c.w+b.y*c.z-b.z*c.y+b.w*c.x;this.y=-b.x*c.z+b.y*c.w+b.z*c.x+b.w*c.y;this.z=b.x*c.y-b.y*c.x+b.z*c.w+b.w*c.z;this.w=-b.x*c.x-b.y*c.y-b.z*c.z+b.w*c.w;return this},multiplyVector3:function(b,c){c||(c=b);var d=b.x,e=b.y,h=b.z,k=this.x,j=this.y,m=this.z,o=this.w,n=o*d+j*h-m*e,r=o*e+m*d-k*h,s=o*h+k*e-j*d,d=-k*
d-j*e-m*h;c.x=n*o+d*-k+r*-m-s*-j;c.y=r*o+d*-j+s*-k-n*-m;c.z=s*o+d*-m+n*-j-r*-k;return c}};THREE.Quaternion.slerp=function(b,c,d,e){var h=b.w*c.w+b.x*c.x+b.y*c.y+b.z*c.z;if(Math.abs(h)>=1)return d.w=b.w,d.x=b.x,d.y=b.y,d.z=b.z,d;var k=Math.acos(h),j=Math.sqrt(1-h*h);if(Math.abs(j)<0.001)return d.w=0.5*(b.w+c.w),d.x=0.5*(b.x+c.x),d.y=0.5*(b.y+c.y),d.z=0.5*(b.z+c.z),d;h=Math.sin((1-e)*k)/j;e=Math.sin(e*k)/j;d.w=b.w*h+c.w*e;d.x=b.x*h+c.x*e;d.y=b.y*h+c.y*e;d.z=b.z*h+c.z*e;return d};
THREE.Vertex=function(b){this.position=b||new THREE.Vector3};THREE.Face3=function(b,c,d,e,h,k){this.a=b;this.b=c;this.c=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materials=k instanceof Array?k:[k];this.centroid=new THREE.Vector3};
THREE.Face4=function(b,c,d,e,h,k,j){this.a=b;this.b=c;this.c=d;this.d=e;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=k instanceof THREE.Color?k:new THREE.Color;this.vertexColors=k instanceof Array?k:[];this.vertexTangents=[];this.materials=j instanceof Array?j:[j];this.centroid=new THREE.Vector3};THREE.UV=function(b,c){this.u=b||0;this.v=c||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(b,c){this.u=b;this.v=c;return this},copy:function(b){this.u=b.u;this.v=b.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.faces=[];this.edges=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,computeCentroids:function(){var b,c,d;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d.centroid.set(0,0,0),d instanceof THREE.Face3?(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),d.centroid.divideScalar(3)):d instanceof THREE.Face4&&(d.centroid.addSelf(this.vertices[d.a].position),d.centroid.addSelf(this.vertices[d.b].position),d.centroid.addSelf(this.vertices[d.c].position),
d.centroid.addSelf(this.vertices[d.d].position),d.centroid.divideScalar(4))},computeFaceNormals:function(b){var c,d,e,h,k,j,m=new THREE.Vector3,o=new THREE.Vector3;e=0;for(h=this.faces.length;e<h;e++){k=this.faces[e];if(b&&k.vertexNormals.length){m.set(0,0,0);c=0;for(d=k.vertexNormals.length;c<d;c++)m.addSelf(k.vertexNormals[c]);m.divideScalar(3)}else c=this.vertices[k.a],d=this.vertices[k.b],j=this.vertices[k.c],m.sub(j.position,d.position),o.sub(c.position,d.position),m.crossSelf(o);m.isZero()||
m.normalize();k.normal.copy(m)}},computeVertexNormals:function(){var b,c,d,e;if(this.__tmpVertices==void 0){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)if(d=this.faces[b],d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{e=
this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal)):d instanceof THREE.Face4&&(e[d.a].addSelf(d.normal),e[d.b].addSelf(d.normal),e[d.c].addSelf(d.normal),e[d.d].addSelf(d.normal));b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),
d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},computeTangents:function(){function b(b,c,d,e,f,k,h){m=b.vertices[c].position;o=b.vertices[d].position;n=b.vertices[e].position;r=j[f];s=j[k];u=j[h];q=o.x-m.x;C=n.x-m.x;z=o.y-m.y;x=n.y-m.y;F=o.z-m.z;wa=n.z-m.z;ca=s.u-r.u;ea=u.u-r.u;U=s.v-r.v;N=u.v-r.v;v=1/(ca*N-ea*U);pa.set((N*q-
U*C)*v,(N*z-U*x)*v,(N*F-U*wa)*v);la.set((ca*C-ea*q)*v,(ca*x-ea*z)*v,(ca*wa-ea*F)*v);fa[c].addSelf(pa);fa[d].addSelf(pa);fa[e].addSelf(pa);sa[c].addSelf(la);sa[d].addSelf(la);sa[e].addSelf(la)}var c,d,e,h,k,j,m,o,n,r,s,u,q,C,z,x,F,wa,ca,ea,U,N,v,Ba,fa=[],sa=[],pa=new THREE.Vector3,la=new THREE.Vector3,ta=new THREE.Vector3,Ha=new THREE.Vector3,Ca=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++)fa[c]=new THREE.Vector3,sa[c]=new THREE.Vector3;c=0;for(d=this.faces.length;c<d;c++)k=this.faces[c],
j=this.faceVertexUvs[0][c],k instanceof THREE.Face3?b(this,k.a,k.b,k.c,0,1,2):k instanceof THREE.Face4&&(b(this,k.a,k.b,k.c,0,1,2),b(this,k.a,k.b,k.d,0,1,3));var Da=["a","b","c","d"];c=0;for(d=this.faces.length;c<d;c++){k=this.faces[c];for(e=0;e<k.vertexNormals.length;e++)Ca.copy(k.vertexNormals[e]),h=k[Da[e]],Ba=fa[h],ta.copy(Ba),ta.subSelf(Ca.multiplyScalar(Ca.dot(Ba))).normalize(),Ha.cross(k.vertexNormals[e],Ba),h=Ha.dot(sa[h]),h=h<0?-1:1,k.vertexTangents[e]=new THREE.Vector4(ta.x,ta.y,ta.z,h)}this.hasTangents=
!0},computeBoundingBox:function(){var b;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){b=this.vertices[c];if(b.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=b.position.x;else if(b.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=b.position.x;if(b.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=
b.position.y;else if(b.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=b.position.y;if(b.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=b.position.z;else if(b.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=b.position.z}}},computeBoundingSphere:function(){for(var b=0,c=0,d=this.vertices.length;c<d;c++)b=Math.max(b,this.vertices[c].position.length());this.boundingSphere={radius:b}},computeEdgeFaces:function(){function b(b,c){return Math.min(b,c)+"_"+Math.max(b,c)}function c(b,
c,d){b[c]===void 0?(b[c]={set:{},array:[]},b[c].set[d]=1,b[c].array.push(d)):b[c].set[d]===void 0&&(b[c].set[d]=1,b[c].array.push(d))}var d,e,h,k,j,m={};d=0;for(e=this.faces.length;d<e;d++)j=this.faces[d],j instanceof THREE.Face3?(h=b(j.a,j.b),c(m,h,d),h=b(j.b,j.c),c(m,h,d),h=b(j.a,j.c),c(m,h,d)):j instanceof THREE.Face4&&(h=b(j.b,j.d),c(m,h,d),h=b(j.a,j.b),c(m,h,d),h=b(j.a,j.d),c(m,h,d),h=b(j.b,j.c),c(m,h,d),h=b(j.c,j.d),c(m,h,d));d=0;for(e=this.edges.length;d<e;d++){j=this.edges[d];h=j.vertexIndices[0];
k=j.vertexIndices[1];j.faceIndices=m[b(h,k)].array;for(h=0;h<j.faceIndices.length;h++)k=j.faceIndices[h],j.faces.push(this.faces[k])}}};THREE.GeometryCount=0;
THREE.Spline=function(b){function c(b,c,d,e,k,h,j){b=(d-b)*0.5;e=(e-c)*0.5;return(2*(c-d)+b+e)*j+(-3*(c-d)-2*b-e)*h+b*k+c}this.points=b;var d=[],e={x:0,y:0,z:0},h,k,j,m,o,n,r,s,u;this.initFromArray=function(b){this.points=[];for(var c=0;c<b.length;c++)this.points[c]={x:b[c][0],y:b[c][1],z:b[c][2]}};this.getPoint=function(b){h=(this.points.length-1)*b;k=Math.floor(h);j=h-k;d[0]=k==0?k:k-1;d[1]=k;d[2]=k>this.points.length-2?k:k+1;d[3]=k>this.points.length-3?k:k+2;n=this.points[d[0]];r=this.points[d[1]];
s=this.points[d[2]];u=this.points[d[3]];m=j*j;o=j*m;e.x=c(n.x,r.x,s.x,u.x,j,m,o);e.y=c(n.y,r.y,s.y,u.y,j,m,o);e.z=c(n.z,r.z,s.z,u.z,j,m,o);return e};this.getControlPointsArray=function(){var b,c,d=this.points.length,e=[];for(b=0;b<d;b++)c=this.points[b],e[b]=[c.x,c.y,c.z];return e};this.getLength=function(b){var c,d,e=c=c=0,k=new THREE.Vector3,h=new THREE.Vector3,j=[],m=0;j[0]=0;b||(b=100);d=this.points.length*b;k.copy(this.points[0]);for(b=1;b<d;b++)c=b/d,position=this.getPoint(c),h.copy(position),
m+=h.distanceTo(k),k.copy(position),c*=this.points.length-1,c=Math.floor(c),c!=e&&(j[c]=m,e=c);j[j.length]=m;return{chunks:j,total:m}};this.reparametrizeByArcLength=function(b){var c,d,e,k,h,j,m=[],o=new THREE.Vector3,n=this.getLength();m.push(o.copy(this.points[0]).clone());for(c=1;c<this.points.length;c++){d=n.chunks[c]-n.chunks[c-1];j=Math.ceil(b*d/n.total);k=(c-1)/(this.points.length-1);h=c/(this.points.length-1);for(d=1;d<j-1;d++)e=k+d*(1/j)*(h-k),position=this.getPoint(e),m.push(o.copy(position).clone());
m.push(o.copy(this.points[c]).clone())}this.points=m}};THREE.Edge=function(b,c,d,e){this.vertices=[b,c];this.vertexIndices=[d,e];this.faces=[];this.faceIndices=[]};THREE.Camera=function(b,c,d,e,h){THREE.Object3D.call(this);this.fov=b||50;this.aspect=c||1;this.near=d||0.1;this.far=e||2E3;this.target=h||new THREE.Object3D;this.useTarget=!0;this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=null;this.updateProjectionMatrix()};THREE.Camera.prototype=new THREE.Object3D;
THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.supr=THREE.Object3D.prototype;THREE.Camera.prototype.translate=function(b,c){this.matrix.rotateAxis(c);c.multiplyScalar(b);this.position.addSelf(c);this.target.position.addSelf(c)};
THREE.Camera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var b=this.fullWidth/this.fullHeight,c=Math.tan(this.fov*Math.PI/360)*this.near,d=-c,e=b*d,b=Math.abs(b*c-e),d=Math.abs(c-d);this.projectionMatrix=THREE.Matrix4.makeFrustum(e+this.x*b/this.fullWidth,e+(this.x+this.width)*b/this.fullWidth,c-(this.y+this.height)*d/this.fullHeight,c-this.y*d/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Camera.prototype.setViewOffset=function(b,c,d,e,h,k){this.fullWidth=b;this.fullHeight=c;this.x=d;this.y=e;this.width=h;this.height=k;this.updateProjectionMatrix()};
THREE.Camera.prototype.update=function(b,c,d){if(this.useTarget)this.matrix.lookAt(this.position,this.target.position,this.up),this.matrix.setPosition(this.position),b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse),c=!0;else if(this.matrixAutoUpdate&&this.updateMatrix(),c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,c=!0,THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse);for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,c,d)};THREE.OrthoCamera=function(b,c,d,e,h,k,j){THREE.Camera.call(this,45,1,h,k,j);this.left=b;this.right=c;this.top=d;this.bottom=e;this.updateProjectionMatrix()};THREE.OrthoCamera.prototype=new THREE.Camera;THREE.OrthoCamera.prototype.constructor=THREE.OrthoCamera;
THREE.OrthoCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=new THREE.Light;
THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,c,d,e){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1;this.distance=d||0;this.castShadow=e!==void 0?e:!1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(b,c,d){THREE.Light.call(this,b);this.position=new THREE.Vector3;this.intensity=c||1;this.distance=d||0};
THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(b,c,d,e){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=c||1;this.distance=d||0;this.castShadow=e!==void 0?e:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(b){this.id=THREE.MaterialCount++;b=b||{};this.opacity=b.opacity!==void 0?b.opacity:1;this.transparent=b.transparent!==void 0?b.transparent:!1;this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.depthTest=b.depthTest!==void 0?b.depthTest:!0;this.polygonOffset=b.polygonOffset!==void 0?b.polygonOffset:!1;this.polygonOffsetFactor=b.polygonOffsetFactor!==void 0?b.polygonOffsetFactor:0;this.polygonOffsetUnits=b.polygonOffsetUnits!==void 0?b.polygonOffsetUnits:
0;this.alphaTest=b.alphaTest!==void 0?b.alphaTest:0};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.linewidth=b.linewidth!==void 0?b.linewidth:1;this.linecap=b.linecap!==void 0?b.linecap:"round";this.linejoin=b.linejoin!==void 0?b.linejoin:"round";this.vertexColors=b.vertexColors?b.vertexColors:!1};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.ambient=b.ambient!==void 0?new THREE.Color(b.ambient):new THREE.Color(328965);this.specular=b.specular!==void 0?new THREE.Color(b.specular):new THREE.Color(1118481);this.shininess=b.shininess!==void 0?b.shininess:30;this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;
this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==
void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading?b.shading:THREE.FlatShading;this.wireframe=b.wireframe?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth?b.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.fragmentShader=b.fragmentShader!==void 0?b.fragmentShader:"void main() {}";this.vertexShader=b.vertexShader!==void 0?b.vertexShader:"void main() {}";this.uniforms=b.uniforms!==void 0?b.uniforms:{};this.attributes=b.attributes;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.fog=
b.fog!==void 0?b.fog:!1;this.lights=b.lights!==void 0?b.lights:!1;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshShaderMaterial.prototype=new THREE.Material;THREE.MeshShaderMaterial.prototype.constructor=THREE.MeshShaderMaterial;
THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.size=b.size!==void 0?b.size:1;this.sizeAttenuation=b.sizeAttenuation!==void 0?b.sizeAttenuation:!0;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.Texture=function(b,c,d,e,h,k){this.id=THREE.TextureCount++;this.image=b;this.mapping=c!==void 0?c:new THREE.UVMapping;this.wrapS=d!==void 0?d:THREE.ClampToEdgeWrapping;this.wrapT=e!==void 0?e:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=k!==void 0?k:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var b=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);b.offset.copy(this.offset);b.repeat.copy(this.repeat);return b}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(b,c,d,e,h,k,j,m,o){THREE.Texture.call(this,null,h,k,j,m,o);this.image={data:b,width:c,height:d};this.format=e!==void 0?e:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);b.offset.copy(this.offset);b.repeat.copy(this.repeat);return b};THREE.Particle=function(b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b]};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c];this.sortParticles=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(b,c,d){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c];this.type=d!=void 0?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c&&c.length?c:[c];this.overdraw=!1;if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=b.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0;d<this.geometry.morphTargets.length;d++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=
d}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(this.morphTargetDictionary[b]!==void 0)return this.morphTargetDictionary[b];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};
THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4;this.hasNoneBoneChildren=!1};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(b,c,d){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.skinMatrix.multiply(b,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;var e,h=this.children.length;if(this.hasNoneBoneChildren){this.matrixWorld.multiply(this.skin.matrixWorld,this.skinMatrix);for(e=0;e<h;e++)b=this.children[e],b instanceof THREE.Bone?b.update(this.skinMatrix,c,d):b.update(this.matrixWorld,!0,d)}else for(e=0;e<h;e++)this.children[e].update(this.skinMatrix,
c,d)};THREE.Bone.prototype.addChild=function(b){if(this.children.indexOf(b)===-1&&(b.parent!==void 0&&b.parent.removeChild(b),b.parent=this,this.children.push(b),!(b instanceof THREE.Bone)))this.hasNoneBoneChildren=!0};
THREE.SkinnedMesh=function(b,c){THREE.Mesh.call(this,b,c);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,h,k,j,m;if(this.geometry.bones!==void 0){for(d=0;d<this.geometry.bones.length;d++)h=this.geometry.bones[d],k=h.pos,j=h.rotq,m=h.scl,e=this.addBone(),e.name=h.name,e.position.set(k[0],k[1],k[2]),e.quaternion.set(j[0],j[1],j[2],j[3]),e.useQuaternion=!0,m!==void 0?e.scale.set(m[0],m[1],m[2]):e.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)h=this.geometry.bones[d],
e=this.bones[d],h.parent===-1?this.addChild(e):this.bones[h.parent].addChild(e);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.update=function(b,c,d){if(this.visible){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;var e,h=this.children.length;for(e=0;e<h;e++)b=this.children[e],b instanceof THREE.Bone?b.update(this.identityMatrix,!1,d):b.update(this.matrixWorld,c,d);d=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(c=0;c<d;c++)ba[c].skinMatrix.flattenToArrayOffset(bm,
c*16)}};THREE.SkinnedMesh.prototype.addBone=function(b){b===void 0&&(b=new THREE.Bone(this));this.bones.push(b);return b};
THREE.SkinnedMesh.prototype.pose=function(){this.update(void 0,!0);for(var b,c=[],d=0;d<this.bones.length;d++)b=this.bones[d],c.push(THREE.Matrix4.makeInvert(b.skinMatrix)),b.skinMatrix.flattenToArrayOffset(this.boneMatrices,d*16);if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];var e;for(b=0;b<this.geometry.skinIndices.length;b++){var d=this.geometry.vertices[b].position,h=this.geometry.skinIndices[b].x,k=this.geometry.skinIndices[b].y;e=new THREE.Vector3(d.x,
d.y,d.z);this.geometry.skinVerticesA.push(c[h].multiplyVector3(e));e=new THREE.Vector3(d.x,d.y,d.z);this.geometry.skinVerticesB.push(c[k].multiplyVector3(e));this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y!==1&&(d=(1-(this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y))*0.5,this.geometry.skinWeights[b].x+=d,this.geometry.skinWeights[b].y+=d)}}};THREE.Ribbon=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c]};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.add=function(b,c){c===void 0&&(c=0);for(var c=Math.abs(c),d=0;d<this.LODs.length;d++)if(c<this.LODs[d].visibleAtDistance)break;this.LODs.splice(d,0,{visibleAtDistance:c,object3D:b});this.addChild(b)};
THREE.LOD.prototype.update=function(b,c,d){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;if(this.LODs.length>1){b=d.matrixWorldInverse;b=-(b.n31*this.position.x+b.n32*this.position.y+b.n33*this.position.z+b.n34);this.LODs[0].object3D.visible=!0;for(var e=1;e<this.LODs.length;e++)if(b>=this.LODs[e].visibleAtDistance)this.LODs[e-1].object3D.visible=!1,
this.LODs[e].object3D.visible=!0;else break;for(;e<this.LODs.length;e++)this.LODs[e].object3D.visible=!1}for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,c,d)};
THREE.Sprite=function(b){THREE.Object3D.call(this);if(b.material!==void 0)this.material=b.material,this.map=void 0,this.blending=material.blending;else if(b.map!==void 0)this.map=b.map instanceof THREE.Texture?b.map:THREE.ImageUtils.loadTexture(b.map),this.material=void 0,this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.useScreenCoordinates=b.useScreenCoordinates!==void 0?b.useScreenCoordinates:!0;this.mergeWith3D=b.mergeWith3D!==void 0?b.mergeWith3D:!this.useScreenCoordinates;
this.affectedByDistance=b.affectedByDistance!==void 0?b.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=b.scaleByViewport!==void 0?b.scaleByViewport:!this.affectedByDistance;this.alignment=b.alignment instanceof THREE.Vector2?b.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.supr=THREE.Object3D.prototype;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.collisions=this.overrideMaterial=this.fog=null;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.supr=THREE.Object3D.prototype;THREE.Scene.prototype.addChild=function(b){this.supr.addChild.call(this,b);this.addChildRecurse(b)};
THREE.Scene.prototype.addChildRecurse=function(b){if(b instanceof THREE.Light)this.lights.indexOf(b)===-1&&this.lights.push(b);else if(!(b instanceof THREE.Camera||b instanceof THREE.Bone)&&this.objects.indexOf(b)===-1)this.objects.push(b),this.__objectsAdded.push(b);for(var c=0;c<b.children.length;c++)this.addChildRecurse(b.children[c])};THREE.Scene.prototype.removeChild=function(b){this.supr.removeChild.call(this,b);this.removeChildRecurse(b)};
THREE.Scene.prototype.removeChildRecurse=function(b){if(b instanceof THREE.Light){var c=this.lights.indexOf(b);c!==-1&&this.lights.splice(c,1)}else b instanceof THREE.Camera||(c=this.objects.indexOf(b),c!==-1&&(this.objects.splice(c,1),this.__objectsRemoved.push(b)));for(c=0;c<b.children.length;c++)this.removeChildRecurse(b.children[c])};THREE.Scene.prototype.addObject=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeObject=THREE.Scene.prototype.removeChild;
THREE.Scene.prototype.addLight=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeLight=THREE.Scene.prototype.removeChild;THREE.Fog=function(b,c,d){this.color=new THREE.Color(b);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(b,c){this.color=new THREE.Color(b);this.density=c!==void 0?c:2.5E-4};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef PHONG\nvPointLight[ i ] = vec4( lVector, lDistance );\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( vec3( 0.0 ), 1.0 );\nvec4 pointSpecular = vec4( vec3( 0.0 ), 1.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight * pointDistance;\npointSpecular += mSpecular * pointSpecularWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( vec3( 0.0 ), 1.0 );\nvec4 dirSpecular = vec4( vec3( 0.0 ), 1.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec4 shadowColor = vec4( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < ( shadowCoord.z + shadowBias ) )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec4( vec3( ( 1.0 - shadowDarkness * shadow ) ), 1.0 );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < ( shadowCoord.z + shadowBias ) )\nshadowColor = shadowColor * vec4( vec3( shadowDarkness ), 1.0 );\n#endif\n}\n}\ngl_FragColor = gl_FragColor * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif"};
THREE.UniformsUtils={merge:function(b){var c,d,e,h={};for(c=0;c<b.length;c++)for(d in e=this.clone(b[c]),e)h[d]=e[d];return h},clone:function(b){var c,d,e,h={};for(c in b)for(d in h[c]={},b[c])e=b[c][d],h[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?e.clone():e instanceof Array?e.slice():e;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",
value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:3,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * vVisibility;\ngl_FragColor = color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * visibility;\ngl_FragColor = color;\n}\n}"},
sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity;\ngl_FragColor = color;\n}"},shadowPost:{vertexShader:"uniform \tmat4 \tprojectionMatrix;\nattribute \tvec3 \tposition;\nvoid main() {\ngl_Position = projectionMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform \tfloat \tdarkness;\nvoid main() {\ngl_FragColor = vec4( 0, 0, 0, darkness );\n}"},
shadowVolumeDynamic:{uniforms:{directionalLightDirection:{type:"fv",value:[]}},vertexShader:"uniform \tvec3 \tdirectionalLightDirection;\nvoid main() {\nvec4 pos      = objectMatrix * vec4( position, 1.0 );\nvec3 norm     = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nvec4 extruded = vec4( directionalLightDirection * 5000.0 * step( 0.0, dot( directionalLightDirection, norm ) ), 0.0 );\ngl_Position   = projectionMatrix * viewMatrix * ( pos + extruded );\n}",
fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0 );\n}"},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},
normal:{uniforms:{opacity:{type:"f",value:1}},fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,
"}"].join("\n"),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)},
specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,
THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},depthRGBA:{uniforms:{},fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}",vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,
"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")}};
THREE.WebGLRenderer=function(b){var c,d,e,h,k,j;function m(b,c,d){var e,k,h,j=b.vertices,m=j.length,I=b.colors,o=I.length,B=b.__vertexArray,n=b.__colorArray,s=b.__sortArray,r=b.__dirtyVertices,u=b.__dirtyColors,q=b.__webglCustomAttributes,v,D;if(q)for(v in q)q[v].offset=0;if(d.sortParticles){Fa.multiplySelf(d.matrixWorld);for(e=0;e<m;e++)k=j[e].position,Pa.copy(k),Fa.multiplyVector3(Pa),s[e]=[Pa.z,e];s.sort(function(b,f){return f[0]-b[0]});for(e=0;e<m;e++)k=j[s[e][1]].position,h=e*3,B[h]=k.x,B[h+
1]=k.y,B[h+2]=k.z;for(e=0;e<o;e++)h=e*3,color=I[s[e][1]],n[h]=color.r,n[h+1]=color.g,n[h+2]=color.b;if(q)for(v in q){e=q[v];I=e.value.length;for(h=0;h<I;h++){index=s[h][1];o=e.offset;if(e.size===1){if(e.boundTo===void 0||e.boundTo==="vertices")e.array[o]=e.value[index]}else{if(e.boundTo===void 0||e.boundTo==="vertices")D=e.value[index];e.size===2?(e.array[o]=D.x,e.array[o+1]=D.y):e.size===3?e.type==="c"?(e.array[o]=D.r,e.array[o+1]=D.g,e.array[o+2]=D.b):(e.array[o]=D.x,e.array[o+1]=D.y,e.array[o+
2]=D.z):(e.array[o]=D.x,e.array[o+1]=D.y,e.array[o+2]=D.z,e.array[o+3]=D.w)}e.offset+=e.size}}}else{if(r)for(e=0;e<m;e++)k=j[e].position,h=e*3,B[h]=k.x,B[h+1]=k.y,B[h+2]=k.z;if(u)for(e=0;e<o;e++)color=I[e],h=e*3,n[h]=color.r,n[h+1]=color.g,n[h+2]=color.b;if(q)for(v in q)if(e=q[v],e.__original.needsUpdate){I=e.value.length;for(h=0;h<I;h++){o=e.offset;if(e.size===1){if(e.boundTo===void 0||e.boundTo==="vertices")e.array[o]=e.value[h]}else{if(e.boundTo===void 0||e.boundTo==="vertices")D=e.value[h];e.size===
2?(e.array[o]=D.x,e.array[o+1]=D.y):e.size===3?e.type==="c"?(e.array[o]=D.r,e.array[o+1]=D.g,e.array[o+2]=D.b):(e.array[o]=D.x,e.array[o+1]=D.y,e.array[o+2]=D.z):(e.array[o]=D.x,e.array[o+1]=D.y,e.array[o+2]=D.z,e.array[o+3]=D.w)}e.offset+=e.size}}}if(r||d.sortParticles)f.bindBuffer(f.ARRAY_BUFFER,b.__webglVertexBuffer),f.bufferData(f.ARRAY_BUFFER,B,c);if(u||d.sortParticles)f.bindBuffer(f.ARRAY_BUFFER,b.__webglColorBuffer),f.bufferData(f.ARRAY_BUFFER,n,c);if(q)for(v in q)if(e=q[v],e.__original.needsUpdate||
d.sortParticles)f.bindBuffer(f.ARRAY_BUFFER,e.buffer),f.bufferData(f.ARRAY_BUFFER,e.array,c)}function o(b,c,d,e,h){e.program||G.initMaterial(e,c,d,h);if(e.morphTargets&&!h.__webglMorphTargetInfluences){h.__webglMorphTargetInfluences=new Float32Array(G.maxMorphTargets);for(var k=0,j=G.maxMorphTargets;k<j;k++)h.__webglMorphTargetInfluences[k]=0}var k=e.program,j=k.uniforms,m=e.uniforms;k!=O&&(f.useProgram(k),O=k);f.uniformMatrix4fv(j.projectionMatrix,!1,Sa);if(d&&(e instanceof THREE.MeshBasicMaterial||
e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial||e instanceof THREE.LineBasicMaterial||e instanceof THREE.ParticleBasicMaterial||e.fog))if(m.fogColor.value=d.color,d instanceof THREE.Fog)m.fogNear.value=d.near,m.fogFar.value=d.far;else if(d instanceof THREE.FogExp2)m.fogDensity.value=d.density;if(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e.lights){var I,o,B,n=0,s=0,r=0,q,u,v,D=Va,E=D.directional.colors,H=D.directional.positions,x=D.point.colors,
y=D.point.positions,C=D.point.distances,z=0,F=0,d=o=0;for(I=c.length;d<I;d++)if(o=c[d],B=o.color,q=o.position,u=o.intensity,v=o.distance,o instanceof THREE.AmbientLight)n+=B.r,s+=B.g,r+=B.b;else if(o instanceof THREE.DirectionalLight)v=z*3,E[v]=B.r*u,E[v+1]=B.g*u,E[v+2]=B.b*u,H[v]=q.x,H[v+1]=q.y,H[v+2]=q.z,z+=1;else if(o instanceof THREE.SpotLight)v=z*3,E[v]=B.r*u,E[v+1]=B.g*u,E[v+2]=B.b*u,B=1/q.length(),H[v]=q.x*B,H[v+1]=q.y*B,H[v+2]=q.z*B,z+=1;else if(o instanceof THREE.PointLight)o=F*3,x[o]=B.r*
u,x[o+1]=B.g*u,x[o+2]=B.b*u,y[o]=q.x,y[o+1]=q.y,y[o+2]=q.z,C[F]=v,F+=1;for(d=z*3;d<E.length;d++)E[d]=0;for(d=F*3;d<x.length;d++)x[d]=0;D.point.length=F;D.directional.length=z;D.ambient[0]=n;D.ambient[1]=s;D.ambient[2]=r;c=Va;m.enableLighting.value=c.directional.length+c.point.length;m.ambientLightColor.value=c.ambient;m.directionalLightColor.value=c.directional.colors;m.directionalLightDirection.value=c.directional.positions;m.pointLightColor.value=c.point.colors;m.pointLightPosition.value=c.point.positions;
m.pointLightDistance.value=c.point.distances}if(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial)m.diffuse.value=e.color,m.opacity.value=e.opacity,(m.map.texture=e.map)&&m.offsetRepeat.value.set(e.map.offset.x,e.map.offset.y,e.map.repeat.x,e.map.repeat.y),m.lightMap.texture=e.lightMap,m.envMap.texture=e.envMap,m.reflectivity.value=e.reflectivity,m.refractionRatio.value=e.refractionRatio,m.combine.value=e.combine,m.useRefract.value=
e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping;if(e instanceof THREE.LineBasicMaterial)m.diffuse.value=e.color,m.opacity.value=e.opacity;else if(e instanceof THREE.ParticleBasicMaterial)m.psColor.value=e.color,m.opacity.value=e.opacity,m.size.value=e.size,m.scale.value=Na.height/2,m.map.texture=e.map;else if(e instanceof THREE.MeshPhongMaterial)m.ambient.value=e.ambient,m.specular.value=e.specular,m.shininess.value=e.shininess;else if(e instanceof THREE.MeshDepthMaterial)m.mNear.value=
b.near,m.mFar.value=b.far,m.opacity.value=e.opacity;else if(e instanceof THREE.MeshNormalMaterial)m.opacity.value=e.opacity;if(h.receiveShadow&&!e._shadowPass&&m.shadowMatrix){for(c=0;c<Ra.length;c++)m.shadowMatrix.value[c]=Ra[c],m.shadowMap.texture[c]=G.shadowMap[c];m.shadowDarkness.value=G.shadowMapDarkness;m.shadowBias.value=G.shadowMapBias}for(var L in m)if(I=k.uniforms[L])if(d=m[L],n=d.type,c=d.value,n=="i")f.uniform1i(I,c);else if(n=="f")f.uniform1f(I,c);else if(n=="v2")f.uniform2f(I,c.x,c.y);
else if(n=="v3")f.uniform3f(I,c.x,c.y,c.z);else if(n=="v4")f.uniform4f(I,c.x,c.y,c.z,c.w);else if(n=="c")f.uniform3f(I,c.r,c.g,c.b);else if(n=="fv1")f.uniform1fv(I,c);else if(n=="fv")f.uniform3fv(I,c);else if(n=="v3v"){if(!d._array)d._array=new Float32Array(3*c.length);n=0;for(s=c.length;n<s;n++)r=n*3,d._array[r]=c[n].x,d._array[r+1]=c[n].y,d._array[r+2]=c[n].z;f.uniform3fv(I,d._array)}else if(n=="m4"){if(!d._array)d._array=new Float32Array(16);c.flattenToArray(d._array);f.uniformMatrix4fv(I,!1,d._array)}else if(n==
"m4v"){if(!d._array)d._array=new Float32Array(16*c.length);n=0;for(s=c.length;n<s;n++)c[n].flattenToArrayOffset(d._array,n*16);f.uniformMatrix4fv(I,!1,d._array)}else if(n=="t"){if(f.uniform1i(I,c),I=d.texture)if(I.image instanceof Array&&I.image.length==6){if(d=I,d.image.length==6)if(d.needsUpdate){if(!d.image.__webglTextureCube)d.image.__webglTextureCube=f.createTexture();f.activeTexture(f.TEXTURE0+c);f.bindTexture(f.TEXTURE_CUBE_MAP,d.image.__webglTextureCube);for(c=0;c<6;c++)f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+
c,0,f.RGBA,f.RGBA,f.UNSIGNED_BYTE,d.image[c]);ta(f.TEXTURE_CUBE_MAP,d,d.image[0]);d.needsUpdate=!1}else f.activeTexture(f.TEXTURE0+c),f.bindTexture(f.TEXTURE_CUBE_MAP,d.image.__webglTextureCube)}else I instanceof THREE.WebGLRenderTargetCube?(d=I,f.activeTexture(f.TEXTURE0+c),f.bindTexture(f.TEXTURE_CUBE_MAP,d.__webglTexture)):Ha(I,c)}else if(n=="tv"){if(!d._array){d._array=[];n=0;for(s=d.texture.length;n<s;n++)d._array[n]=c+n}f.uniform1iv(I,d._array);n=0;for(s=d.texture.length;n<s;n++)(I=d.texture[n])&&
Ha(I,d._array[n])}f.uniformMatrix4fv(j.modelViewMatrix,!1,h._modelViewMatrixArray);j.normalMatrix&&f.uniformMatrix3fv(j.normalMatrix,!1,h._normalMatrixArray);(e instanceof THREE.MeshShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&j.cameraPosition!==null&&f.uniform3f(j.cameraPosition,b.position.x,b.position.y,b.position.z);(e instanceof THREE.MeshShaderMaterial||e.envMap||e.skinning||h.receiveShadow)&&j.objectMatrix!==null&&f.uniformMatrix4fv(j.objectMatrix,!1,h._objectMatrixArray);
(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshShaderMaterial||e.skinning)&&j.viewMatrix!==null&&f.uniformMatrix4fv(j.viewMatrix,!1,Ta);e.skinning&&(f.uniformMatrix4fv(j.cameraInverseMatrix,!1,Ta),f.uniformMatrix4fv(j.boneGlobalMatrices,!1,h.boneMatrices));return k}function n(b,c,d,e,h,k){if(e.opacity!=0){var j,b=o(b,c,d,e,k).attributes;if(!e.morphTargets&&b.position>=0)f.bindBuffer(f.ARRAY_BUFFER,h.__webglVertexBuffer),f.vertexAttribPointer(b.position,
3,f.FLOAT,!1,0,0);else if(k.morphTargetBase){c=e.program.attributes;k.morphTargetBase!==-1?(f.bindBuffer(f.ARRAY_BUFFER,h.__webglMorphTargetsBuffers[k.morphTargetBase]),f.vertexAttribPointer(c.position,3,f.FLOAT,!1,0,0)):c.position>=0&&(f.bindBuffer(f.ARRAY_BUFFER,h.__webglVertexBuffer),f.vertexAttribPointer(c.position,3,f.FLOAT,!1,0,0));if(k.morphTargetForcedOrder.length)for(var d=0,m=k.morphTargetForcedOrder,I=k.morphTargetInfluences;d<e.numSupportedMorphTargets&&d<m.length;)f.bindBuffer(f.ARRAY_BUFFER,
h.__webglMorphTargetsBuffers[m[d]]),f.vertexAttribPointer(c["morphTarget"+d],3,f.FLOAT,!1,0,0),k.__webglMorphTargetInfluences[d]=I[m[d]],d++;else{var m=[],n=-1,B=0,I=k.morphTargetInfluences,s,r=I.length,d=0;for(k.morphTargetBase!==-1&&(m[k.morphTargetBase]=!0);d<e.numSupportedMorphTargets;){for(s=0;s<r;s++)!m[s]&&I[s]>n&&(B=s,n=I[B]);f.bindBuffer(f.ARRAY_BUFFER,h.__webglMorphTargetsBuffers[B]);f.vertexAttribPointer(c["morphTarget"+d],3,f.FLOAT,!1,0,0);k.__webglMorphTargetInfluences[d]=n;m[B]=1;n=
-1;d++}}e.program.uniforms.morphTargetInfluences!==null&&f.uniform1fv(e.program.uniforms.morphTargetInfluences,k.__webglMorphTargetInfluences)}if(h.__webglCustomAttributes)for(j in h.__webglCustomAttributes)b[j]>=0&&(c=h.__webglCustomAttributes[j],f.bindBuffer(f.ARRAY_BUFFER,c.buffer),f.vertexAttribPointer(b[j],c.size,f.FLOAT,!1,0,0));b.color>=0&&(f.bindBuffer(f.ARRAY_BUFFER,h.__webglColorBuffer),f.vertexAttribPointer(b.color,3,f.FLOAT,!1,0,0));b.normal>=0&&(f.bindBuffer(f.ARRAY_BUFFER,h.__webglNormalBuffer),
f.vertexAttribPointer(b.normal,3,f.FLOAT,!1,0,0));b.tangent>=0&&(f.bindBuffer(f.ARRAY_BUFFER,h.__webglTangentBuffer),f.vertexAttribPointer(b.tangent,4,f.FLOAT,!1,0,0));b.uv>=0&&(h.__webglUVBuffer?(f.bindBuffer(f.ARRAY_BUFFER,h.__webglUVBuffer),f.vertexAttribPointer(b.uv,2,f.FLOAT,!1,0,0),f.enableVertexAttribArray(b.uv)):f.disableVertexAttribArray(b.uv));b.uv2>=0&&(h.__webglUV2Buffer?(f.bindBuffer(f.ARRAY_BUFFER,h.__webglUV2Buffer),f.vertexAttribPointer(b.uv2,2,f.FLOAT,!1,0,0),f.enableVertexAttribArray(b.uv2)):
f.disableVertexAttribArray(b.uv2));e.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(f.bindBuffer(f.ARRAY_BUFFER,h.__webglSkinVertexABuffer),f.vertexAttribPointer(b.skinVertexA,4,f.FLOAT,!1,0,0),f.bindBuffer(f.ARRAY_BUFFER,h.__webglSkinVertexBBuffer),f.vertexAttribPointer(b.skinVertexB,4,f.FLOAT,!1,0,0),f.bindBuffer(f.ARRAY_BUFFER,h.__webglSkinIndicesBuffer),f.vertexAttribPointer(b.skinIndex,4,f.FLOAT,!1,0,0),f.bindBuffer(f.ARRAY_BUFFER,h.__webglSkinWeightsBuffer),
f.vertexAttribPointer(b.skinWeight,4,f.FLOAT,!1,0,0));k instanceof THREE.Mesh?(e.wireframe?(f.lineWidth(e.wireframeLinewidth),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,h.__webglLineBuffer),f.drawElements(f.LINES,h.__webglLineCount,f.UNSIGNED_SHORT,0)):(f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,h.__webglFaceBuffer),f.drawElements(f.TRIANGLES,h.__webglFaceCount,f.UNSIGNED_SHORT,0)),G.data.vertices+=h.__webglFaceCount,G.data.faces+=h.__webglFaceCount/3,G.data.drawCalls++):k instanceof THREE.Line?(k=k.type==THREE.LineStrip?
f.LINE_STRIP:f.LINES,f.lineWidth(e.linewidth),f.drawArrays(k,0,h.__webglLineCount),G.data.drawCalls++):k instanceof THREE.ParticleSystem?(f.drawArrays(f.POINTS,0,h.__webglParticleCount),G.data.drawCalls++):k instanceof THREE.Ribbon&&(f.drawArrays(f.TRIANGLE_STRIP,0,h.__webglVertexCount),G.data.drawCalls++)}}function r(b,c,d){if(!b.__webglVertexBuffer)b.__webglVertexBuffer=f.createBuffer();if(!b.__webglNormalBuffer)b.__webglNormalBuffer=f.createBuffer();b.hasPos&&(f.bindBuffer(f.ARRAY_BUFFER,b.__webglVertexBuffer),
f.bufferData(f.ARRAY_BUFFER,b.positionArray,f.DYNAMIC_DRAW),f.enableVertexAttribArray(c.attributes.position),f.vertexAttribPointer(c.attributes.position,3,f.FLOAT,!1,0,0));if(b.hasNormal){f.bindBuffer(f.ARRAY_BUFFER,b.__webglNormalBuffer);if(d==THREE.FlatShading){var e,h,k,j,m,o,n,s,r,q,u=b.count*3;for(q=0;q<u;q+=9)d=b.normalArray,e=d[q],h=d[q+1],k=d[q+2],j=d[q+3],o=d[q+4],s=d[q+5],m=d[q+6],n=d[q+7],r=d[q+8],e=(e+j+m)/3,h=(h+o+n)/3,k=(k+s+r)/3,d[q]=e,d[q+1]=h,d[q+2]=k,d[q+3]=e,d[q+4]=h,d[q+5]=k,d[q+
6]=e,d[q+7]=h,d[q+8]=k}f.bufferData(f.ARRAY_BUFFER,b.normalArray,f.DYNAMIC_DRAW);f.enableVertexAttribArray(c.attributes.normal);f.vertexAttribPointer(c.attributes.normal,3,f.FLOAT,!1,0,0)}f.drawArrays(f.TRIANGLES,0,b.count);b.count=0}function s(b){if(K!=b.doubleSided)b.doubleSided?f.disable(f.CULL_FACE):f.enable(f.CULL_FACE),K=b.doubleSided;if(Ja!=b.flipSided)b.flipSided?f.frontFace(f.CW):f.frontFace(f.CCW),Ja=b.flipSided}function u(b){xa!=b&&(b?f.enable(f.DEPTH_TEST):f.disable(f.DEPTH_TEST),xa=b)}
function q(b,c,d){Ea!=b&&(b?f.enable(f.POLYGON_OFFSET_FILL):f.disable(f.POLYGON_OFFSET_FILL),Ea=b);if(b&&(S!=c||ya!=d))f.polygonOffset(c,d),S=c,ya=d}function C(b){Ia[0].set(b.n41-b.n11,b.n42-b.n12,b.n43-b.n13,b.n44-b.n14);Ia[1].set(b.n41+b.n11,b.n42+b.n12,b.n43+b.n13,b.n44+b.n14);Ia[2].set(b.n41+b.n21,b.n42+b.n22,b.n43+b.n23,b.n44+b.n24);Ia[3].set(b.n41-b.n21,b.n42-b.n22,b.n43-b.n23,b.n44-b.n24);Ia[4].set(b.n41-b.n31,b.n42-b.n32,b.n43-b.n33,b.n44-b.n34);Ia[5].set(b.n41+b.n31,b.n42+b.n32,b.n43+b.n33,
b.n44+b.n34);for(var c,b=0;b<6;b++)c=Ia[b],c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))}function z(b){for(var c=b.matrixWorld,d=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(b=Ia[f].x*c.n14+Ia[f].y*c.n24+Ia[f].z*c.n34+Ia[f].w,b<=d)return!1;return!0}function x(b,c){b.list[b.count]=c;b.count+=1}function F(b){var c,d,f=b.object,e=b.opaque,h=b.transparent;h.count=0;b=e.count=0;for(c=f.materials.length;b<c;b++)d=f.materials[b],d.transparent?x(h,
d):x(e,d)}function wa(b){var c,d,f,e,h=b.object,k=b.buffer,j=b.opaque,m=b.transparent;m.count=0;b=j.count=0;for(f=h.materials.length;b<f;b++)if(c=h.materials[b],c instanceof THREE.MeshFaceMaterial){c=0;for(d=k.materials.length;c<d;c++)(e=k.materials[c])&&(e.transparent?x(m,e):x(j,e))}else(e=c)&&(e.transparent?x(m,e):x(j,e))}function ca(b,c){return c.z-b.z}function ea(b,c){var d,e,h,k=0,j,m,I,q,B=b.lights;V||(V=new THREE.Camera(G.shadowCameraFov,c.aspect,G.shadowCameraNear,G.shadowCameraFar));d=0;
for(e=B.length;d<e;d++)if(h=B[d],h instanceof THREE.SpotLight&&h.castShadow){G.shadowMap[k]||(G.shadowMap[k]=new THREE.WebGLRenderTarget(G.shadowMapWidth,G.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));Ra[k]||(Ra[k]=new THREE.Matrix4);j=G.shadowMap[k];m=Ra[k];V.position.copy(h.position);V.target.position.copy(h.target.position);V.update(void 0,!0);b.update(void 0,!1,V);m.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);m.multiplySelf(V.projectionMatrix);
m.multiplySelf(V.matrixWorldInverse);V.matrixWorldInverse.flattenToArray(Ta);V.projectionMatrix.flattenToArray(Sa);Fa.multiply(V.projectionMatrix,V.matrixWorldInverse);C(Fa);G.initWebGLObjects(b);Ca(j);f.clearColor(1,1,1,1);G.clear();f.clearColor(va.r,va.g,va.b,Qa);m=b.__webglObjects.length;h=b.__webglObjectsImmediate.length;for(j=0;j<m;j++)I=b.__webglObjects[j],q=I.object,q.visible&&q.castShadow?!(q instanceof THREE.Mesh)||!q.frustumCulled||z(q)?(q.matrixWorld.flattenToArray(q._objectMatrixArray),
N(q,V,!1),I.render=!0):I.render=!1:I.render=!1;u(!0);la(THREE.NormalBlending);for(j=0;j<m;j++)if(I=b.__webglObjects[j],I.render)q=I.object,buffer=I.buffer,s(q),I=q.customDepthMaterial?q.customDepthMaterial:q.geometry.morphTargets.length?Wa:Ua,n(V,B,null,I,buffer,q);for(j=0;j<h;j++)I=b.__webglObjectsImmediate[j],q=I.object,q.visible&&q.castShadow&&(q.matrixAutoUpdate&&q.matrixWorld.flattenToArray(q._objectMatrixArray),N(q,V,!1),s(q),program=o(V,B,null,Ua,q),q.render(function(b){r(b,program,Ua.shading)}));
k++}}function U(b,j){var m,o,Q;m=c;var n=d,q=ra/Aa,s,I=[],r=Aa*0.5,B=ra*0.5,u=!0;f.useProgram(e);O=e;xa=ga=-1;Xa||(f.enableVertexAttribArray(c.position),f.enableVertexAttribArray(c.uv),Xa=!0);f.disable(f.CULL_FACE);f.enable(f.BLEND);f.depthMask(!0);f.bindBuffer(f.ARRAY_BUFFER,h);f.vertexAttribPointer(m.position,2,f.FLOAT,!1,16,0);f.vertexAttribPointer(m.uv,2,f.FLOAT,!1,16,8);f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,k);f.uniformMatrix4fv(n.projectionMatrix,!1,Sa);f.activeTexture(f.TEXTURE0);f.uniform1i(n.map,
0);m=0;for(o=b.__webglSprites.length;m<o;m++)Q=b.__webglSprites[m],Q.useScreenCoordinates?Q.z=-Q.position.z:(Q._modelViewMatrix.multiplyToArray(j.matrixWorldInverse,Q.matrixWorld,Q._modelViewMatrixArray),Q.z=-Q._modelViewMatrix.n34);b.__webglSprites.sort(ca);m=0;for(o=b.__webglSprites.length;m<o;m++)Q=b.__webglSprites[m],Q.material===void 0&&Q.map&&Q.map.image&&Q.map.image.width&&(Q.useScreenCoordinates?(f.uniform1i(n.useScreenCoordinates,1),f.uniform3f(n.screenPosition,(Q.position.x-r)/r,(B-Q.position.y)/
B,Math.max(0,Math.min(1,Q.position.z)))):(f.uniform1i(n.useScreenCoordinates,0),f.uniform1i(n.affectedByDistance,Q.affectedByDistance?1:0),f.uniformMatrix4fv(n.modelViewMatrix,!1,Q._modelViewMatrixArray)),s=Q.map.image.width/(Q.scaleByViewport?ra:1),I[0]=s*q*Q.scale.x,I[1]=s*Q.scale.y,f.uniform2f(n.uvScale,Q.uvScale.x,Q.uvScale.y),f.uniform2f(n.uvOffset,Q.uvOffset.x,Q.uvOffset.y),f.uniform2f(n.alignment,Q.alignment.x,Q.alignment.y),f.uniform1f(n.opacity,Q.opacity),f.uniform1f(n.rotation,Q.rotation),
f.uniform2fv(n.scale,I),Q.mergeWith3D&&!u?(f.enable(f.DEPTH_TEST),u=!0):!Q.mergeWith3D&&u&&(f.disable(f.DEPTH_TEST),u=!1),la(Q.blending),Ha(Q.map,0),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0));f.enable(f.CULL_FACE);f.enable(f.DEPTH_TEST);f.depthMask(da)}function N(b,c,d){b._modelViewMatrix.multiplyToArray(c.matrixWorldInverse,b.matrixWorld,b._modelViewMatrixArray);d&&THREE.Matrix4.makeInvert3x3(b._modelViewMatrix).transposeIntoArray(b._normalMatrixArray)}function v(b){var c,d,f,e;e=b.__materials;
b=0;for(d=e.length;b<d;b++)if(f=e[b],f.attributes)for(c in f.attributes)if(f.attributes[c].needsUpdate)return!0;return!1}function Ba(b){var c,d,f,e;e=b.__materials;b=0;for(d=e.length;b<d;b++)if(f=e[b],f.attributes)for(c in f.attributes)f.attributes[c].needsUpdate=!1}function fa(b,c){var d;for(d=b.length-1;d>=0;d--)b[d].object==c&&b.splice(d,1)}function sa(b){function c(b){var e=[];d=0;for(f=b.length;d<f;d++)b[d]==void 0?e.push("undefined"):e.push(b[d].id);return e.join("_")}var d,f,e,h,k,j,m,o,n=
{},q=b.morphTargets!==void 0?b.morphTargets.length:0;b.geometryGroups={};e=0;for(h=b.faces.length;e<h;e++)k=b.faces[e],j=k.materials,m=c(j),n[m]==void 0&&(n[m]={hash:m,counter:0}),o=n[m].hash+"_"+n[m].counter,b.geometryGroups[o]==void 0&&(b.geometryGroups[o]={faces:[],materials:j,vertices:0,numMorphTargets:q}),k=k instanceof THREE.Face3?3:4,b.geometryGroups[o].vertices+k>65535&&(n[m].counter+=1,o=n[m].hash+"_"+n[m].counter,b.geometryGroups[o]==void 0&&(b.geometryGroups[o]={faces:[],materials:j,vertices:0,
numMorphTargets:q})),b.geometryGroups[o].faces.push(e),b.geometryGroups[o].vertices+=k;b.geometryGroupsList=[];for(var s in b.geometryGroups)b.geometryGroupsList.push(b.geometryGroups[s])}function pa(b,c,d){b.push({buffer:c,object:d,opaque:{list:[],count:0},transparent:{list:[],count:0}})}function la(b){if(b!=ga){switch(b){case THREE.AdditiveBlending:f.blendEquation(f.FUNC_ADD);f.blendFunc(f.SRC_ALPHA,f.ONE);break;case THREE.SubtractiveBlending:f.blendEquation(f.FUNC_ADD);f.blendFunc(f.ZERO,f.ONE_MINUS_SRC_COLOR);
break;case THREE.MultiplyBlending:f.blendEquation(f.FUNC_ADD);f.blendFunc(f.ZERO,f.SRC_COLOR);break;default:f.blendEquationSeparate(f.FUNC_ADD,f.FUNC_ADD),f.blendFuncSeparate(f.SRC_ALPHA,f.ONE_MINUS_SRC_ALPHA,f.ONE,f.ONE_MINUS_SRC_ALPHA)}ga=b}}function ta(b,c,d){(d.width&d.width-1)==0&&(d.height&d.height-1)==0?(f.texParameteri(b,f.TEXTURE_WRAP_S,J(c.wrapS)),f.texParameteri(b,f.TEXTURE_WRAP_T,J(c.wrapT)),f.texParameteri(b,f.TEXTURE_MAG_FILTER,J(c.magFilter)),f.texParameteri(b,f.TEXTURE_MIN_FILTER,
J(c.minFilter)),f.generateMipmap(b)):(f.texParameteri(b,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(b,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(b,f.TEXTURE_MAG_FILTER,qa(c.magFilter)),f.texParameteri(b,f.TEXTURE_MIN_FILTER,qa(c.minFilter)))}function Ha(b,c){if(b.needsUpdate){if(!b.__webglInit)b.__webglInit=!0,b.__webglTexture=f.createTexture();f.activeTexture(f.TEXTURE0+c);f.bindTexture(f.TEXTURE_2D,b.__webglTexture);b instanceof THREE.DataTexture?f.texImage2D(f.TEXTURE_2D,0,J(b.format),
b.image.width,b.image.height,0,J(b.format),f.UNSIGNED_BYTE,b.image.data):f.texImage2D(f.TEXTURE_2D,0,f.RGBA,f.RGBA,f.UNSIGNED_BYTE,b.image);ta(f.TEXTURE_2D,b,b.image);b.needsUpdate=!1}else f.activeTexture(f.TEXTURE0+c),f.bindTexture(f.TEXTURE_2D,b.__webglTexture)}function Ca(b){var c=b instanceof THREE.WebGLRenderTargetCube;if(b&&!b.__webglFramebuffer){if(b.depthBuffer===void 0)b.depthBuffer=!0;if(b.stencilBuffer===void 0)b.stencilBuffer=!0;b.__webglRenderbuffer=f.createRenderbuffer();b.__webglTexture=
f.createTexture();if(c){f.bindTexture(f.TEXTURE_CUBE_MAP,b.__webglTexture);ta(f.TEXTURE_CUBE_MAP,b,b);b.__webglFramebuffer=[];for(var d=0;d<6;d++)b.__webglFramebuffer[d]=f.createFramebuffer(),f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,J(b.format),b.width,b.height,0,J(b.format),J(b.type),null)}else b.__webglFramebuffer=f.createFramebuffer(),f.bindTexture(f.TEXTURE_2D,b.__webglTexture),ta(f.TEXTURE_2D,b,b),f.texImage2D(f.TEXTURE_2D,0,J(b.format),b.width,b.height,0,J(b.format),J(b.type),null);f.bindRenderbuffer(f.RENDERBUFFER,
b.__webglRenderbuffer);if(c)for(d=0;d<6;++d)f.bindFramebuffer(f.FRAMEBUFFER,b.__webglFramebuffer[d]),f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.TEXTURE_CUBE_MAP_POSITIVE_X+d,b.__webglTexture,0);else f.bindFramebuffer(f.FRAMEBUFFER,b.__webglFramebuffer),f.framebufferTexture2D(f.FRAMEBUFFER,f.COLOR_ATTACHMENT0,f.TEXTURE_2D,b.__webglTexture,0);b.depthBuffer&&!b.stencilBuffer?(f.renderbufferStorage(f.RENDERBUFFER,f.DEPTH_COMPONENT16,b.width,b.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,
f.DEPTH_ATTACHMENT,f.RENDERBUFFER,b.__webglRenderbuffer)):b.depthBuffer&&b.stencilBuffer?(f.renderbufferStorage(f.RENDERBUFFER,f.DEPTH_STENCIL,b.width,b.height),f.framebufferRenderbuffer(f.FRAMEBUFFER,f.DEPTH_STENCIL_ATTACHMENT,f.RENDERBUFFER,b.__webglRenderbuffer)):f.renderbufferStorage(f.RENDERBUFFER,f.RGBA4,b.width,b.height);c?f.bindTexture(f.TEXTURE_CUBE_MAP,null):f.bindTexture(f.TEXTURE_2D,null);f.bindRenderbuffer(f.RENDERBUFFER,null);f.bindFramebuffer(f.FRAMEBUFFER,null)}var e,h;b?(c=c?b.__webglFramebuffer[b.activeCubeFace]:
b.__webglFramebuffer,d=b.width,b=b.height,h=e=0):(c=null,d=Aa,b=ra,e=Ka,h=za);c!=R&&(f.bindFramebuffer(f.FRAMEBUFFER,c),f.viewport(e,h,d,b),R=c)}function Da(b){b instanceof THREE.WebGLRenderTargetCube?(f.bindTexture(f.TEXTURE_CUBE_MAP,b.__webglTexture),f.generateMipmap(f.TEXTURE_CUBE_MAP),f.bindTexture(f.TEXTURE_CUBE_MAP,null)):(f.bindTexture(f.TEXTURE_2D,b.__webglTexture),f.generateMipmap(f.TEXTURE_2D),f.bindTexture(f.TEXTURE_2D,null))}function ma(b,c){var d;b=="fragment"?d=f.createShader(f.FRAGMENT_SHADER):
b=="vertex"&&(d=f.createShader(f.VERTEX_SHADER));f.shaderSource(d,c);f.compileShader(d);return!f.getShaderParameter(d,f.COMPILE_STATUS)?(console.error(f.getShaderInfoLog(d)),console.error(c),null):d}function qa(b){switch(b){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return f.NEAREST;default:return f.LINEAR}}function J(b){switch(b){case THREE.RepeatWrapping:return f.REPEAT;case THREE.ClampToEdgeWrapping:return f.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return f.MIRRORED_REPEAT;
case THREE.NearestFilter:return f.NEAREST;case THREE.NearestMipMapNearestFilter:return f.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return f.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return f.LINEAR;case THREE.LinearMipMapNearestFilter:return f.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return f.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return f.BYTE;case THREE.UnsignedByteType:return f.UNSIGNED_BYTE;case THREE.ShortType:return f.SHORT;case THREE.UnsignedShortType:return f.UNSIGNED_SHORT;
case THREE.IntType:return f.INT;case THREE.UnsignedShortType:return f.UNSIGNED_INT;case THREE.FloatType:return f.FLOAT;case THREE.AlphaFormat:return f.ALPHA;case THREE.RGBFormat:return f.RGB;case THREE.RGBAFormat:return f.RGBA;case THREE.LuminanceFormat:return f.LUMINANCE;case THREE.LuminanceAlphaFormat:return f.LUMINANCE_ALPHA}return 0}var G=this,f,T=[],O=null,R=null,da=!0,K=null,Ja=null,ga=null,xa=null,Ea=null,S=null,ya=null,Ka=0,za=0,Aa=0,ra=0,Ia=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,
new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],Fa=new THREE.Matrix4,Sa=new Float32Array(16),Ta=new Float32Array(16),Pa=new THREE.Vector4,Va={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},b=b||{},Na=b.canvas!==void 0?b.canvas:document.createElement("canvas");j=b.stencil!==void 0?b.stencil:!0;var $a=b.preserveDrawingBuffer!==void 0?b.preserveDrawingBuffer:!1,ab=b.antialias!==void 0?b.antialias:!1,va=b.clearColor!==void 0?
new THREE.Color(b.clearColor):new THREE.Color(0),Qa=b.clearAlpha!==void 0?b.clearAlpha:0;_maxLights=b.maxLights!==void 0?b.maxLights:4;this.data={vertices:0,faces:0,drawCalls:0};this.maxMorphTargets=8;this.domElement=Na;this.sortObjects=this.autoClear=!0;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=!1;this.shadowMapSoft=!0;var V,Ra=[],
b=THREE.ShaderLib.depthRGBA,Ya=THREE.UniformsUtils.clone(b.uniforms),Ua=new THREE.MeshShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:Ya}),Wa=new THREE.MeshShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:Ya,morphTargets:!0});Ua._shadowPass=!0;Wa._shadowPass=!0;try{if(!(f=Na.getContext("experimental-webgl",{antialias:ab,stencil:j,preserveDrawingBuffer:$a})))throw"Error creating WebGL context.";console.log(navigator.userAgent+
" | "+f.getParameter(f.VERSION)+" | "+f.getParameter(f.VENDOR)+" | "+f.getParameter(f.RENDERER)+" | "+f.getParameter(f.SHADING_LANGUAGE_VERSION))}catch(bb){console.error(bb)}f.clearColor(0,0,0,1);f.clearDepth(1);f.clearStencil(0);f.enable(f.DEPTH_TEST);f.depthFunc(f.LEQUAL);f.frontFace(f.CCW);f.cullFace(f.BACK);f.enable(f.CULL_FACE);f.enable(f.BLEND);f.blendEquation(f.FUNC_ADD);f.blendFunc(f.SRC_ALPHA,f.ONE_MINUS_SRC_ALPHA);f.clearColor(va.r,va.g,va.b,Qa);this.context=f;var Za=f.getParameter(f.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>
0;c=void 0;d=void 0;e=void 0;h=void 0;k=void 0;b=void 0;j=void 0;b=new Float32Array(16);j=new Uint16Array(6);i=0;b[i++]=-1;b[i++]=-1;b[i++]=0;b[i++]=1;b[i++]=1;b[i++]=-1;b[i++]=1;b[i++]=1;b[i++]=1;b[i++]=1;b[i++]=1;b[i++]=0;b[i++]=-1;b[i++]=1;b[i++]=0;i=b[i++]=0;j[i++]=0;j[i++]=1;j[i++]=2;j[i++]=0;j[i++]=2;j[i++]=3;h=f.createBuffer();k=f.createBuffer();f.bindBuffer(f.ARRAY_BUFFER,h);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,k);f.bufferData(f.ELEMENT_ARRAY_BUFFER,
j,f.STATIC_DRAW);e=f.createProgram();f.attachShader(e,ma("fragment",THREE.ShaderLib.sprite.fragmentShader));f.attachShader(e,ma("vertex",THREE.ShaderLib.sprite.vertexShader));f.linkProgram(e);c={};d={};c.position=f.getAttribLocation(e,"position");c.uv=f.getAttribLocation(e,"uv");d.uvOffset=f.getUniformLocation(e,"uvOffset");d.uvScale=f.getUniformLocation(e,"uvScale");d.rotation=f.getUniformLocation(e,"rotation");d.scale=f.getUniformLocation(e,"scale");d.alignment=f.getUniformLocation(e,"alignment");
d.map=f.getUniformLocation(e,"map");d.opacity=f.getUniformLocation(e,"opacity");d.useScreenCoordinates=f.getUniformLocation(e,"useScreenCoordinates");d.affectedByDistance=f.getUniformLocation(e,"affectedByDistance");d.screenPosition=f.getUniformLocation(e,"screenPosition");d.modelViewMatrix=f.getUniformLocation(e,"modelViewMatrix");d.projectionMatrix=f.getUniformLocation(e,"projectionMatrix");var Xa=!1;this.setSize=function(b,c){Na.width=b;Na.height=c;this.setViewport(0,0,Na.width,Na.height)};this.setViewport=
function(b,c,d,e){Ka=b;za=c;Aa=d;ra=e;f.viewport(Ka,za,Aa,ra)};this.setScissor=function(b,c,d,e){f.scissor(b,c,d,e)};this.enableScissorTest=function(b){b?f.enable(f.SCISSOR_TEST):f.disable(f.SCISSOR_TEST)};this.enableDepthBufferWrite=function(b){da=b;f.depthMask(b)};this.setClearColorHex=function(b,c){va.setHex(b);Qa=c;f.clearColor(va.r,va.g,va.b,Qa)};this.setClearColor=function(b,c){va.copy(b);Qa=c;f.clearColor(va.r,va.g,va.b,Qa)};this.clear=function(){f.clear(f.COLOR_BUFFER_BIT|f.DEPTH_BUFFER_BIT|
f.STENCIL_BUFFER_BIT)};this.getContext=function(){return f};this.deallocateObject=function(b){if(b.__webglInit)if(b.__webglInit=!1,delete b._modelViewMatrix,delete b._normalMatrixArray,delete b._modelViewMatrixArray,delete b._objectMatrixArray,b instanceof THREE.Mesh)for(g in b.geometry.geometryGroups){var c=b.geometry.geometryGroups[g];f.deleteBuffer(c.__webglVertexBuffer);f.deleteBuffer(c.__webglNormalBuffer);f.deleteBuffer(c.__webglTangentBuffer);f.deleteBuffer(c.__webglColorBuffer);f.deleteBuffer(c.__webglUVBuffer);
f.deleteBuffer(c.__webglUV2Buffer);f.deleteBuffer(c.__webglSkinVertexABuffer);f.deleteBuffer(c.__webglSkinVertexBBuffer);f.deleteBuffer(c.__webglSkinIndicesBuffer);f.deleteBuffer(c.__webglSkinWeightsBuffer);f.deleteBuffer(c.__webglFaceBuffer);f.deleteBuffer(c.__webglLineBuffer);if(c.numMorphTargets)for(var d=0,e=c.numMorphTargets;d<e;d++)f.deleteBuffer(c.__webglMorphTargetsBuffers[d])}else if(b instanceof THREE.Ribbon)b=b.geometry,f.deleteBuffer(b.__webglVertexBuffer),f.deleteBuffer(b.__webglColorBuffer);
else if(b instanceof THREE.Line)b=b.geometry,f.deleteBuffer(b.__webglVertexBuffer),f.deleteBuffer(b.__webglColorBuffer);else if(b instanceof THREE.ParticleSystem)b=b.geometry,f.deleteBuffer(b.__webglVertexBuffer),f.deleteBuffer(b.__webglColorBuffer)};this.deallocateTexture=function(b){if(b.__webglInit)b.__webglInit=!1,f.deleteTexture(b.__webglTexture)};this.initMaterial=function(b,c,d,e){var h,k,j;b instanceof THREE.MeshDepthMaterial?j="depth":b instanceof THREE.MeshNormalMaterial?j="normal":b instanceof
THREE.MeshBasicMaterial?j="basic":b instanceof THREE.MeshLambertMaterial?j="lambert":b instanceof THREE.MeshPhongMaterial?j="phong":b instanceof THREE.LineBasicMaterial?j="basic":b instanceof THREE.ParticleBasicMaterial&&(j="particle_basic");if(j){var m=THREE.ShaderLib[j];b.uniforms=THREE.UniformsUtils.clone(m.uniforms);b.vertexShader=m.vertexShader;b.fragmentShader=m.fragmentShader}var o,n,q;o=q=m=0;for(n=c.length;o<n;o++)k=c[o],k instanceof THREE.SpotLight&&q++,k instanceof THREE.DirectionalLight&&
q++,k instanceof THREE.PointLight&&m++;m+q<=_maxLights?o=q:(o=Math.ceil(_maxLights*q/(m+q)),m=_maxLights-o);k={directional:o,point:m};m=q=0;for(o=c.length;m<o;m++)n=c[m],n instanceof THREE.SpotLight&&n.castShadow&&q++;var s=50;if(e!==void 0&&e instanceof THREE.SkinnedMesh)s=e.bones.length;var r;a:{o=b.fragmentShader;n=b.vertexShader;var m=b.uniforms,c=b.attributes,d={map:!!b.map,envMap:!!b.envMap,lightMap:!!b.lightMap,vertexColors:b.vertexColors,fog:d,sizeAttenuation:b.sizeAttenuation,skinning:b.skinning,
morphTargets:b.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:k.directional,maxPointLights:k.point,maxBones:s,shadowMapEnabled:this.shadowMapEnabled&&e.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:q,alphaTest:b.alphaTest},u,e=[];j?e.push(j):(e.push(o),e.push(n));for(u in d)e.push(u),e.push(d[u]);j=e.join();u=0;for(e=T.length;u<e;u++)if(T[u].code==j){r=T[u].program;break a}u=f.createProgram();e=[Za?
"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+d.maxDirLights,"#define MAX_POINT_LIGHTS "+d.maxPointLights,"#define MAX_SHADOWS "+d.maxShadows,"#define MAX_BONES "+d.maxBones,d.map?"#define USE_MAP":"",d.envMap?"#define USE_ENVMAP":"",d.lightMap?"#define USE_LIGHTMAP":"",d.vertexColors?"#define USE_COLOR":"",d.skinning?"#define USE_SKINNING":"",d.morphTargets?"#define USE_MORPHTARGETS":"",d.shadowMapEnabled?"#define USE_SHADOWMAP":"",d.shadowMapSoft?"#define SHADOWMAP_SOFT":"",d.sizeAttenuation?
"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
k=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+d.maxDirLights,"#define MAX_POINT_LIGHTS "+d.maxPointLights,"#define MAX_SHADOWS "+d.maxShadows,d.alphaTest?"#define ALPHATEST "+d.alphaTest:"",d.fog?"#define USE_FOG":"",d.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",d.map?"#define USE_MAP":"",d.envMap?"#define USE_ENVMAP":"",d.lightMap?"#define USE_LIGHTMAP":"",d.vertexColors?"#define USE_COLOR":"",d.shadowMapEnabled?"#define USE_SHADOWMAP":"",d.shadowMapSoft?"#define SHADOWMAP_SOFT":
"",d.shadowMapSoft?"#define SHADOWMAP_WIDTH "+d.shadowMapWidth.toFixed(1):"",d.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+d.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");f.attachShader(u,ma("fragment",k+o));f.attachShader(u,ma("vertex",e+n));f.linkProgram(u);f.getProgramParameter(u,f.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+f.getProgramParameter(u,f.VALIDATE_STATUS)+", gl error ["+f.getError()+"]");u.uniforms=
{};u.attributes={};var v,e="viewMatrix,modelViewMatrix,projectionMatrix,normalMatrix,objectMatrix,cameraPosition,cameraInverseMatrix,boneGlobalMatrices,morphTargetInfluences".split(",");for(v in m)e.push(v);v=e;e=0;for(m=v.length;e<m;e++)o=v[e],u.uniforms[o]=f.getUniformLocation(u,o);e="position,normal,uv,uv2,tangent,color,skinVertexA,skinVertexB,skinIndex,skinWeight".split(",");for(v=0;v<d.maxMorphTargets;v++)e.push("morphTarget"+v);for(r in c)e.push(r);r=e;v=0;for(c=r.length;v<c;v++)d=r[v],u.attributes[d]=
f.getAttribLocation(u,d);T.push({program:u,code:j});r=u}b.program=r;r=b.program.attributes;r.position>=0&&f.enableVertexAttribArray(r.position);r.color>=0&&f.enableVertexAttribArray(r.color);r.normal>=0&&f.enableVertexAttribArray(r.normal);r.tangent>=0&&f.enableVertexAttribArray(r.tangent);b.skinning&&r.skinVertexA>=0&&r.skinVertexB>=0&&r.skinIndex>=0&&r.skinWeight>=0&&(f.enableVertexAttribArray(r.skinVertexA),f.enableVertexAttribArray(r.skinVertexB),f.enableVertexAttribArray(r.skinIndex),f.enableVertexAttribArray(r.skinWeight));
if(b.attributes)for(h in b.attributes)r[h]!==void 0&&r[h]>=0&&f.enableVertexAttribArray(r[h]);if(b.morphTargets)for(h=b.numSupportedMorphTargets=0;h<this.maxMorphTargets;h++)v="morphTarget"+h,r[v]>=0&&(f.enableVertexAttribArray(r[v]),b.numSupportedMorphTargets++)};this.clearTarget=function(b,c,d,e){Ca(b);b=0;c&&(b|=f.COLOR_BUFFER_BIT);d&&(b|=f.DEPTH_BUFFER_BIT);e&&(b|=f.STENCIL_BUFFER_BIT);f.clear(b)};this.render=function(b,c,d,f){var e,h,k,j,m,v,B,x,J=b.lights,Oa=b.fog;this.shadowMapEnabled&&ea(b,
c);G.data.vertices=0;G.data.faces=0;G.data.drawCalls=0;c.matrixAutoUpdate&&c.update(void 0,!0);b.update(void 0,!1,c);c.matrixWorldInverse.flattenToArray(Ta);c.projectionMatrix.flattenToArray(Sa);Fa.multiply(c.projectionMatrix,c.matrixWorldInverse);C(Fa);this.initWebGLObjects(b);Ca(d);(this.autoClear||f)&&this.clear();m=b.__webglObjects.length;for(f=0;f<m;f++)if(e=b.__webglObjects[f],B=e.object,B.visible)if(!(B instanceof THREE.Mesh)||!B.frustumCulled||z(B)){if(B.matrixWorld.flattenToArray(B._objectMatrixArray),
N(B,c,!0),wa(e),e.render=!0,this.sortObjects)e.object.renderDepth?e.z=e.object.renderDepth:(Pa.copy(B.position),Fa.multiplyVector3(Pa),e.z=Pa.z)}else e.render=!1;else e.render=!1;this.sortObjects&&b.__webglObjects.sort(ca);v=b.__webglObjectsImmediate.length;for(f=0;f<v;f++)e=b.__webglObjectsImmediate[f],B=e.object,B.visible&&(B.matrixAutoUpdate&&B.matrixWorld.flattenToArray(B._objectMatrixArray),N(B,c,!0),F(e));if(b.overrideMaterial){u(b.overrideMaterial.depthTest);la(b.overrideMaterial.blending);
for(f=0;f<m;f++)if(e=b.__webglObjects[f],e.render)B=e.object,x=e.buffer,s(B),n(c,J,Oa,b.overrideMaterial,x,B);for(f=0;f<v;f++)e=b.__webglObjectsImmediate[f],B=e.object,B.visible&&(s(B),h=o(c,J,Oa,b.overrideMaterial,B),B.render(function(c){r(c,h,b.overrideMaterial.shading)}))}else{la(THREE.NormalBlending);for(f=m-1;f>=0;f--)if(e=b.__webglObjects[f],e.render){B=e.object;x=e.buffer;k=e.opaque;s(B);for(e=0;e<k.count;e++)j=k.list[e],u(j.depthTest),q(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits),
n(c,J,Oa,j,x,B)}for(f=0;f<v;f++)if(e=b.__webglObjectsImmediate[f],B=e.object,B.visible){k=e.opaque;s(B);for(e=0;e<k.count;e++)j=k.list[e],u(j.depthTest),q(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits),h=o(c,J,Oa,j,B),B.render(function(b){r(b,h,j.shading)})}for(f=0;f<m;f++)if(e=b.__webglObjects[f],e.render){B=e.object;x=e.buffer;k=e.transparent;s(B);for(e=0;e<k.count;e++)j=k.list[e],la(j.blending),u(j.depthTest),q(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits),n(c,J,Oa,j,
x,B)}for(f=0;f<v;f++)if(e=b.__webglObjectsImmediate[f],B=e.object,B.visible){k=e.transparent;s(B);for(e=0;e<k.count;e++)j=k.list[e],la(j.blending),u(j.depthTest),q(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits),h=o(c,J,Oa,j,B),B.render(function(b){r(b,h,j.shading)})}}b.__webglSprites.length&&U(b,c);d&&d.minFilter!==THREE.NearestFilter&&d.minFilter!==THREE.LinearFilter&&Da(d)};this.initWebGLObjects=function(b){if(!b.__webglObjects)b.__webglObjects=[],b.__webglObjectsImmediate=[],b.__webglSprites=
[];for(;b.__objectsAdded.length;){var c=b.__objectsAdded[0],d=b,e=void 0,h=void 0,k=void 0;if(!c.__webglInit)if(c.__webglInit=!0,c._modelViewMatrix=new THREE.Matrix4,c._normalMatrixArray=new Float32Array(9),c._modelViewMatrixArray=new Float32Array(16),c._objectMatrixArray=new Float32Array(16),c.matrixWorld.flattenToArray(c._objectMatrixArray),c instanceof THREE.Mesh)for(e in h=c.geometry,h.geometryGroups==void 0&&sa(h),h.geometryGroups){k=h.geometryGroups[e];if(!k.__webglVertexBuffer){var j=k;j.__webglVertexBuffer=
f.createBuffer();j.__webglNormalBuffer=f.createBuffer();j.__webglTangentBuffer=f.createBuffer();j.__webglColorBuffer=f.createBuffer();j.__webglUVBuffer=f.createBuffer();j.__webglUV2Buffer=f.createBuffer();j.__webglSkinVertexABuffer=f.createBuffer();j.__webglSkinVertexBBuffer=f.createBuffer();j.__webglSkinIndicesBuffer=f.createBuffer();j.__webglSkinWeightsBuffer=f.createBuffer();j.__webglFaceBuffer=f.createBuffer();j.__webglLineBuffer=f.createBuffer();if(j.numMorphTargets){var o=void 0,n=void 0;j.__webglMorphTargetsBuffers=
[];o=0;for(n=j.numMorphTargets;o<n;o++)j.__webglMorphTargetsBuffers.push(f.createBuffer())}for(var j=k,o=c,q=void 0,r=void 0,s=void 0,u=void 0,x=void 0,z=void 0,C=z=n=0,P=void 0,D=void 0,s=void 0,u=o.geometry,x=u.faces,P=j.faces,q=0,r=P.length;q<r;q++)s=P[q],s=x[s],s instanceof THREE.Face3?(n+=3,z+=1,C+=3):s instanceof THREE.Face4&&(n+=4,z+=2,C+=4);for(var q=j,r=o,E=void 0,H=void 0,E=void 0,s=[],x=0,P=r.materials.length;x<P;x++)if(E=r.materials[x],E instanceof THREE.MeshFaceMaterial){E=0;for(l=q.materials.length;E<
l;E++)(H=q.materials[E])&&s.push(H)}else(H=E)&&s.push(H);q=s;j.__materials=q;a:{x=void 0;P=q.length;for(r=0;r<P;r++)if(x=q[r],x.map||x.lightMap||x instanceof THREE.MeshShaderMaterial){r=!0;break a}r=!1}a:{P=void 0;s=q.length;for(x=0;x<s;x++)if(P=q[x],!(P instanceof THREE.MeshBasicMaterial&&!P.envMap||P instanceof THREE.MeshDepthMaterial)){P=P&&P.shading!=void 0&&P.shading==THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;break a}P=!1}a:{s=void 0;E=q.length;for(x=0;x<E;x++)if(s=q[x],s.vertexColors){s=
s.vertexColors;break a}s=!1}j.__vertexArray=new Float32Array(n*3);if(P)j.__normalArray=new Float32Array(n*3);if(u.hasTangents)j.__tangentArray=new Float32Array(n*4);if(s)j.__colorArray=new Float32Array(n*3);if(r){if(u.faceUvs.length>0||u.faceVertexUvs.length>0)j.__uvArray=new Float32Array(n*2);if(u.faceUvs.length>1||u.faceVertexUvs.length>1)j.__uv2Array=new Float32Array(n*2)}if(o.geometry.skinWeights.length&&o.geometry.skinIndices.length)j.__skinVertexAArray=new Float32Array(n*4),j.__skinVertexBArray=
new Float32Array(n*4),j.__skinIndexArray=new Float32Array(n*4),j.__skinWeightArray=new Float32Array(n*4);j.__faceArray=new Uint16Array(z*3+(o.geometry.edgeFaces?o.geometry.edgeFaces.length*6:0));j.__lineArray=new Uint16Array(C*2);if(j.numMorphTargets){j.__morphTargetsArrays=[];u=0;for(x=j.numMorphTargets;u<x;u++)j.__morphTargetsArrays.push(new Float32Array(n*3))}j.__needsSmoothNormals=P==THREE.SmoothShading;j.__uvType=r;j.__vertexColorType=s;j.__normalType=P;j.__webglFaceCount=z*3+(o.geometry.edgeFaces?
o.geometry.edgeFaces.length*6:0);j.__webglLineCount=C*2;u=0;for(x=q.length;u<x;u++)if(r=q[u],r.attributes){if(j.__webglCustomAttributes===void 0)j.__webglCustomAttributes={};for(a in r.attributes){s=r.attributes[a];P={};for(D in s)P[D]=s[D];if(!P.__webglInitialized||P.createUniqueBuffers)P.__webglInitialized=!0,z=1,P.type==="v2"?z=2:P.type==="v3"?z=3:P.type==="v4"?z=4:P.type==="c"&&(z=3),P.size=z,P.array=new Float32Array(n*z),P.buffer=f.createBuffer(),P.buffer.belongsToAttribute=a,s.needsUpdate=!0,
P.__original=s;j.__webglCustomAttributes[a]=P}}j.__inittedArrays=!0;h.__dirtyVertices=!0;h.__dirtyMorphTargets=!0;h.__dirtyElements=!0;h.__dirtyUvs=!0;h.__dirtyNormals=!0;h.__dirtyTangents=!0;h.__dirtyColors=!0}pa(d.__webglObjects,k,c)}else if(c instanceof THREE.Ribbon){h=c.geometry;if(!h.__webglVertexBuffer)e=h,e.__webglVertexBuffer=f.createBuffer(),e.__webglColorBuffer=f.createBuffer(),e=h,k=e.vertices.length,e.__vertexArray=new Float32Array(k*3),e.__colorArray=new Float32Array(k*3),e.__webglVertexCount=
k,h.__dirtyVertices=!0,h.__dirtyColors=!0;pa(d.__webglObjects,h,c)}else if(c instanceof THREE.Line){h=c.geometry;if(!h.__webglVertexBuffer)e=h,e.__webglVertexBuffer=f.createBuffer(),e.__webglColorBuffer=f.createBuffer(),e=h,k=e.vertices.length,e.__vertexArray=new Float32Array(k*3),e.__colorArray=new Float32Array(k*3),e.__webglLineCount=k,h.__dirtyVertices=!0,h.__dirtyColors=!0;pa(d.__webglObjects,h,c)}else if(c instanceof THREE.ParticleSystem){h=c.geometry;if(!h.__webglVertexBuffer){e=h;e.__webglVertexBuffer=
f.createBuffer();e.__webglColorBuffer=f.createBuffer();e=h;k=c;j=e.vertices.length;e.__vertexArray=new Float32Array(j*3);e.__colorArray=new Float32Array(j*3);e.__sortArray=[];e.__webglParticleCount=j;e.__materials=k.materials;D=void 0;o=0;for(n=k.materials.length;o<n;o++)if(D=k.materials[o],D.attributes){if(e.__webglCustomAttributes===void 0)e.__webglCustomAttributes={};for(a in D.attributes){originalAttribute=D.attributes[a];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];
if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type==="v4"?size=4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(j*size),attribute.buffer=f.createBuffer(),attribute.buffer.belongsToAttribute=a,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;e.__webglCustomAttributes[a]=attribute}}h.__dirtyVertices=!0;h.__dirtyColors=
!0}pa(d.__webglObjects,h,c)}else THREE.MarchingCubes!==void 0&&c instanceof THREE.MarchingCubes?d.__webglObjectsImmediate.push({object:c,opaque:{list:[],count:0},transparent:{list:[],count:0}}):c instanceof THREE.Sprite&&d.__webglSprites.push(c);b.__objectsAdded.splice(0,1)}for(;b.__objectsRemoved.length;){d=b.__objectsRemoved[0];c=b;if(d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Ribbon||d instanceof THREE.Line)fa(c.__webglObjects,d);else if(d instanceof THREE.Sprite){c=
c.__webglSprites;for(h=c.length-1;h>=0;h--)c[h]==d&&c.splice(h,1)}else d instanceof THREE.MarchingCubes&&fa(c.__webglObjectsImmediate,d);b.__objectsRemoved.splice(0,1)}c=0;for(d=b.__webglObjects.length;c<d;c++)if(e=b.__webglObjects[c].object,n=k=h=void 0,e instanceof THREE.Mesh){h=e.geometry;j=0;for(o=h.geometryGroupsList.length;j<o;j++)if(k=h.geometryGroupsList[j],n=v(k),h.__dirtyVertices||h.__dirtyMorphTargets||h.__dirtyElements||h.__dirtyUvs||h.__dirtyNormals||h.__dirtyColors||h.__dirtyTangents||
n)if(n=k,D=f.DYNAMIC_DRAW,z=!h.dynamic,n.__inittedArrays){var F=void 0,y=void 0,J=void 0,G=void 0,N=void 0,L=void 0,M=H=E=s=P=void 0,K=void 0,t=void 0,p=void 0,A=void 0,O=void 0,T=F=F=y=O=O=void 0,ha=0,ja=0,ca=0,ea=0,U=0,R=0,W=0,S=0,ia=0,w=0,ka=0,t=0,A=void 0,na=n.__vertexArray,la=n.__uvArray,ma=n.__uv2Array,V=n.__normalArray,X=n.__tangentArray,oa=n.__colorArray,Y=n.__skinVertexAArray,Z=n.__skinVertexBArray,$=n.__skinIndexArray,aa=n.__skinWeightArray,ta=n.__morphTargetsArrays,da=n.__webglCustomAttributes,
p=void 0,ga=n.__faceArray,Ga=n.__lineArray,ya=n.__needsSmoothNormals,r=n.__vertexColorType,q=n.__uvType,x=n.__normalType,ua=e.geometry,va=ua.__dirtyVertices,wa=ua.__dirtyElements,qa=ua.__dirtyUvs,xa=ua.__dirtyNormals,Aa=ua.__dirtyTangents,Ca=ua.__dirtyColors,Ea=ua.__dirtyMorphTargets,ra=ua.vertices,Ha=n.faces,Ja=ua.faces,Ia=ua.faceVertexUvs[0],Ka=ua.faceVertexUvs[1],za=ua.skinVerticesA,Da=ua.skinVerticesB,Fa=ua.skinIndices,Ma=ua.skinWeights,La=ua.morphTargets;if(da)for(T in da)da[T].offset=0,da[T].offsetSrc=
0;C=0;for(u=Ha.length;C<u;C++)if(F=Ha[C],y=Ja[F],Ia&&(P=Ia[F]),Ka&&(s=Ka[F]),F=y.vertexNormals,J=y.normal,G=y.vertexColors,N=y.color,L=y.vertexTangents,y instanceof THREE.Face3){if(va)E=ra[y.a].position,H=ra[y.b].position,M=ra[y.c].position,na[ja]=E.x,na[ja+1]=E.y,na[ja+2]=E.z,na[ja+3]=H.x,na[ja+4]=H.y,na[ja+5]=H.z,na[ja+6]=M.x,na[ja+7]=M.y,na[ja+8]=M.z,ja+=9;if(da)for(T in da)if(p=da[T],p.__original.needsUpdate)t=p.offset,A=p.offsetSrc,p.size===1?(p.boundTo===void 0||p.boundTo==="vertices"?(p.array[t]=
p.value[y.a],p.array[t+1]=p.value[y.b],p.array[t+2]=p.value[y.c]):p.boundTo==="faces"?(A=p.value[A],p.array[t]=A,p.array[t+1]=A,p.array[t+2]=A,p.offsetSrc++):p.boundTo==="faceVertices"&&(p.array[t]=p.value[A],p.array[t+1]=p.value[A+1],p.array[t+2]=p.value[A+2],p.offsetSrc+=3),p.offset+=3):(p.boundTo===void 0||p.boundTo==="vertices"?(E=p.value[y.a],H=p.value[y.b],M=p.value[y.c]):p.boundTo==="faces"?(M=H=E=A=p.value[A],p.offsetSrc++):p.boundTo==="faceVertices"&&(E=p.value[A],H=p.value[A+1],M=p.value[A+
2],p.offsetSrc+=3),p.size===2?(p.array[t]=E.x,p.array[t+1]=E.y,p.array[t+2]=H.x,p.array[t+3]=H.y,p.array[t+4]=M.x,p.array[t+5]=M.y,p.offset+=6):p.size===3?(p.type==="c"?(p.array[t]=E.r,p.array[t+1]=E.g,p.array[t+2]=E.b,p.array[t+3]=H.r,p.array[t+4]=H.g,p.array[t+5]=H.b,p.array[t+6]=M.r,p.array[t+7]=M.g,p.array[t+8]=M.b):(p.array[t]=E.x,p.array[t+1]=E.y,p.array[t+2]=E.z,p.array[t+3]=H.x,p.array[t+4]=H.y,p.array[t+5]=H.z,p.array[t+6]=M.x,p.array[t+7]=M.y,p.array[t+8]=M.z),p.offset+=9):(p.array[t]=E.x,
p.array[t+1]=E.y,p.array[t+2]=E.z,p.array[t+3]=E.w,p.array[t+4]=H.x,p.array[t+5]=H.y,p.array[t+6]=H.z,p.array[t+7]=H.w,p.array[t+8]=M.x,p.array[t+9]=M.y,p.array[t+10]=M.z,p.array[t+11]=M.w,p.offset+=12));if(Ea){t=0;for(p=La.length;t<p;t++)E=La[t].vertices[y.a].position,H=La[t].vertices[y.b].position,M=La[t].vertices[y.c].position,A=ta[t],A[ka]=E.x,A[ka+1]=E.y,A[ka+2]=E.z,A[ka+3]=H.x,A[ka+4]=H.y,A[ka+5]=H.z,A[ka+6]=M.x,A[ka+7]=M.y,A[ka+8]=M.z;ka+=9}if(Ma.length)t=Ma[y.a],p=Ma[y.b],A=Ma[y.c],aa[w]=
t.x,aa[w+1]=t.y,aa[w+2]=t.z,aa[w+3]=t.w,aa[w+4]=p.x,aa[w+5]=p.y,aa[w+6]=p.z,aa[w+7]=p.w,aa[w+8]=A.x,aa[w+9]=A.y,aa[w+10]=A.z,aa[w+11]=A.w,t=Fa[y.a],p=Fa[y.b],A=Fa[y.c],$[w]=t.x,$[w+1]=t.y,$[w+2]=t.z,$[w+3]=t.w,$[w+4]=p.x,$[w+5]=p.y,$[w+6]=p.z,$[w+7]=p.w,$[w+8]=A.x,$[w+9]=A.y,$[w+10]=A.z,$[w+11]=A.w,t=za[y.a],p=za[y.b],A=za[y.c],Y[w]=t.x,Y[w+1]=t.y,Y[w+2]=t.z,Y[w+3]=1,Y[w+4]=p.x,Y[w+5]=p.y,Y[w+6]=p.z,Y[w+7]=1,Y[w+8]=A.x,Y[w+9]=A.y,Y[w+10]=A.z,Y[w+11]=1,t=Da[y.a],p=Da[y.b],A=Da[y.c],Z[w]=t.x,Z[w+1]=
t.y,Z[w+2]=t.z,Z[w+3]=1,Z[w+4]=p.x,Z[w+5]=p.y,Z[w+6]=p.z,Z[w+7]=1,Z[w+8]=A.x,Z[w+9]=A.y,Z[w+10]=A.z,Z[w+11]=1,w+=12;if(Ca&&r)G.length==3&&r==THREE.VertexColors?(y=G[0],t=G[1],p=G[2]):p=t=y=N,oa[ia]=y.r,oa[ia+1]=y.g,oa[ia+2]=y.b,oa[ia+3]=t.r,oa[ia+4]=t.g,oa[ia+5]=t.b,oa[ia+6]=p.r,oa[ia+7]=p.g,oa[ia+8]=p.b,ia+=9;if(Aa&&ua.hasTangents)G=L[0],N=L[1],y=L[2],X[W]=G.x,X[W+1]=G.y,X[W+2]=G.z,X[W+3]=G.w,X[W+4]=N.x,X[W+5]=N.y,X[W+6]=N.z,X[W+7]=N.w,X[W+8]=y.x,X[W+9]=y.y,X[W+10]=y.z,X[W+11]=y.w,W+=12;if(xa&&x)if(F.length==
3&&ya)for(L=0;L<3;L++)J=F[L],V[R]=J.x,V[R+1]=J.y,V[R+2]=J.z,R+=3;else for(L=0;L<3;L++)V[R]=J.x,V[R+1]=J.y,V[R+2]=J.z,R+=3;if(qa&&P!==void 0&&q)for(L=0;L<3;L++)F=P[L],la[ca]=F.u,la[ca+1]=F.v,ca+=2;if(qa&&s!==void 0&&q)for(L=0;L<3;L++)F=s[L],ma[ea]=F.u,ma[ea+1]=F.v,ea+=2;wa&&(ga[U]=ha,ga[U+1]=ha+1,ga[U+2]=ha+2,U+=3,Ga[S]=ha,Ga[S+1]=ha+1,Ga[S+2]=ha,Ga[S+3]=ha+2,Ga[S+4]=ha+1,Ga[S+5]=ha+2,S+=6,ha+=3)}else if(y instanceof THREE.Face4){if(va)E=ra[y.a].position,H=ra[y.b].position,M=ra[y.c].position,K=ra[y.d].position,
na[ja]=E.x,na[ja+1]=E.y,na[ja+2]=E.z,na[ja+3]=H.x,na[ja+4]=H.y,na[ja+5]=H.z,na[ja+6]=M.x,na[ja+7]=M.y,na[ja+8]=M.z,na[ja+9]=K.x,na[ja+10]=K.y,na[ja+11]=K.z,ja+=12;if(da)for(T in da)if(p=da[T],p.__original.needsUpdate)t=p.offset,A=p.offsetSrc,p.size===1?(p.boundTo===void 0||p.boundTo==="vertices"?(p.array[t]=p.value[y.a],p.array[t+1]=p.value[y.b],p.array[t+2]=p.value[y.c],p.array[t+3]=p.value[y.d]):p.boundTo==="faces"?(A=p.value[A],p.array[t]=A,p.array[t+1]=A,p.array[t+2]=A,p.array[t+3]=A,p.offsetSrc++):
p.boundTo==="faceVertices"&&(p.array[t]=p.value[A],p.array[t+1]=p.value[A+1],p.array[t+2]=p.value[A+2],p.array[t+3]=p.value[A+3],p.offsetSrc+=4),p.offset+=4):(p.boundTo===void 0||p.boundTo==="vertices"?(E=p.value[y.a],H=p.value[y.b],M=p.value[y.c],K=p.value[y.d]):p.boundTo==="faces"?(K=M=H=E=A=p.value[A],p.offsetSrc++):p.boundTo==="faceVertices"&&(E=p.value[A],H=p.value[A+1],M=p.value[A+2],K=p.value[A+3],p.offsetSrc+=4),p.size===2?(p.array[t]=E.x,p.array[t+1]=E.y,p.array[t+2]=H.x,p.array[t+3]=H.y,
p.array[t+4]=M.x,p.array[t+5]=M.y,p.array[t+6]=K.x,p.array[t+7]=K.y,p.offset+=8):p.size===3?(p.type==="c"?(p.array[t]=E.r,p.array[t+1]=E.g,p.array[t+2]=E.b,p.array[t+3]=H.r,p.array[t+4]=H.g,p.array[t+5]=H.b,p.array[t+6]=M.r,p.array[t+7]=M.g,p.array[t+8]=M.b,p.array[t+9]=K.r,p.array[t+10]=K.g,p.array[t+11]=K.b):(p.array[t]=E.x,p.array[t+1]=E.y,p.array[t+2]=E.z,p.array[t+3]=H.x,p.array[t+4]=H.y,p.array[t+5]=H.z,p.array[t+6]=M.x,p.array[t+7]=M.y,p.array[t+8]=M.z,p.array[t+9]=K.x,p.array[t+10]=K.y,p.array[t+
11]=K.z),p.offset+=12):(p.array[t]=E.x,p.array[t+1]=E.y,p.array[t+2]=E.z,p.array[t+3]=E.w,p.array[t+4]=H.x,p.array[t+5]=H.y,p.array[t+6]=H.z,p.array[t+7]=H.w,p.array[t+8]=M.x,p.array[t+9]=M.y,p.array[t+10]=M.z,p.array[t+11]=M.w,p.array[t+12]=K.x,p.array[t+13]=K.y,p.array[t+14]=K.z,p.array[t+15]=K.w,p.offset+=16));if(Ea){t=0;for(p=La.length;t<p;t++)E=La[t].vertices[y.a].position,H=La[t].vertices[y.b].position,M=La[t].vertices[y.c].position,K=La[t].vertices[y.d].position,A=ta[t],A[ka]=E.x,A[ka+1]=E.y,
A[ka+2]=E.z,A[ka+3]=H.x,A[ka+4]=H.y,A[ka+5]=H.z,A[ka+6]=M.x,A[ka+7]=M.y,A[ka+8]=M.z,A[ka+9]=K.x,A[ka+10]=K.y,A[ka+11]=K.z;ka+=12}if(Ma.length)t=Ma[y.a],p=Ma[y.b],A=Ma[y.c],O=Ma[y.d],aa[w]=t.x,aa[w+1]=t.y,aa[w+2]=t.z,aa[w+3]=t.w,aa[w+4]=p.x,aa[w+5]=p.y,aa[w+6]=p.z,aa[w+7]=p.w,aa[w+8]=A.x,aa[w+9]=A.y,aa[w+10]=A.z,aa[w+11]=A.w,aa[w+12]=O.x,aa[w+13]=O.y,aa[w+14]=O.z,aa[w+15]=O.w,t=Fa[y.a],p=Fa[y.b],A=Fa[y.c],O=Fa[y.d],$[w]=t.x,$[w+1]=t.y,$[w+2]=t.z,$[w+3]=t.w,$[w+4]=p.x,$[w+5]=p.y,$[w+6]=p.z,$[w+7]=p.w,
$[w+8]=A.x,$[w+9]=A.y,$[w+10]=A.z,$[w+11]=A.w,$[w+12]=O.x,$[w+13]=O.y,$[w+14]=O.z,$[w+15]=O.w,t=za[y.a],p=za[y.b],A=za[y.c],O=za[y.d],Y[w]=t.x,Y[w+1]=t.y,Y[w+2]=t.z,Y[w+3]=1,Y[w+4]=p.x,Y[w+5]=p.y,Y[w+6]=p.z,Y[w+7]=1,Y[w+8]=A.x,Y[w+9]=A.y,Y[w+10]=A.z,Y[w+11]=1,Y[w+12]=O.x,Y[w+13]=O.y,Y[w+14]=O.z,Y[w+15]=1,t=Da[y.a],p=Da[y.b],A=Da[y.c],y=Da[y.d],Z[w]=t.x,Z[w+1]=t.y,Z[w+2]=t.z,Z[w+3]=1,Z[w+4]=p.x,Z[w+5]=p.y,Z[w+6]=p.z,Z[w+7]=1,Z[w+8]=A.x,Z[w+9]=A.y,Z[w+10]=A.z,Z[w+11]=1,Z[w+12]=y.x,Z[w+13]=y.y,Z[w+14]=
y.z,Z[w+15]=1,w+=16;if(Ca&&r)G.length==4&&r==THREE.VertexColors?(y=G[0],t=G[1],p=G[2],G=G[3]):G=p=t=y=N,oa[ia]=y.r,oa[ia+1]=y.g,oa[ia+2]=y.b,oa[ia+3]=t.r,oa[ia+4]=t.g,oa[ia+5]=t.b,oa[ia+6]=p.r,oa[ia+7]=p.g,oa[ia+8]=p.b,oa[ia+9]=G.r,oa[ia+10]=G.g,oa[ia+11]=G.b,ia+=12;if(Aa&&ua.hasTangents)G=L[0],N=L[1],y=L[2],L=L[3],X[W]=G.x,X[W+1]=G.y,X[W+2]=G.z,X[W+3]=G.w,X[W+4]=N.x,X[W+5]=N.y,X[W+6]=N.z,X[W+7]=N.w,X[W+8]=y.x,X[W+9]=y.y,X[W+10]=y.z,X[W+11]=y.w,X[W+12]=L.x,X[W+13]=L.y,X[W+14]=L.z,X[W+15]=L.w,W+=16;
if(xa&&x)if(F.length==4&&ya)for(L=0;L<4;L++)J=F[L],V[R]=J.x,V[R+1]=J.y,V[R+2]=J.z,R+=3;else for(L=0;L<4;L++)V[R]=J.x,V[R+1]=J.y,V[R+2]=J.z,R+=3;if(qa&&P!==void 0&&q)for(L=0;L<4;L++)F=P[L],la[ca]=F.u,la[ca+1]=F.v,ca+=2;if(qa&&s!==void 0&&q)for(L=0;L<4;L++)F=s[L],ma[ea]=F.u,ma[ea+1]=F.v,ea+=2;wa&&(ga[U]=ha,ga[U+1]=ha+1,ga[U+2]=ha+3,ga[U+3]=ha+1,ga[U+4]=ha+2,ga[U+5]=ha+3,U+=6,Ga[S]=ha,Ga[S+1]=ha+1,Ga[S+2]=ha,Ga[S+3]=ha+3,Ga[S+4]=ha+1,Ga[S+5]=ha+2,Ga[S+6]=ha+2,Ga[S+7]=ha+3,S+=8,ha+=4)}va&&(f.bindBuffer(f.ARRAY_BUFFER,
n.__webglVertexBuffer),f.bufferData(f.ARRAY_BUFFER,na,D));if(da)for(T in da)p=da[T],p.__original.needsUpdate&&(f.bindBuffer(f.ARRAY_BUFFER,p.buffer),f.bufferData(f.ARRAY_BUFFER,p.array,D));if(Ea){t=0;for(p=La.length;t<p;t++)f.bindBuffer(f.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[t]),f.bufferData(f.ARRAY_BUFFER,ta[t],D)}Ca&&ia>0&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglColorBuffer),f.bufferData(f.ARRAY_BUFFER,oa,D));xa&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglNormalBuffer),f.bufferData(f.ARRAY_BUFFER,
V,D));Aa&&ua.hasTangents&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglTangentBuffer),f.bufferData(f.ARRAY_BUFFER,X,D));qa&&ca>0&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglUVBuffer),f.bufferData(f.ARRAY_BUFFER,la,D));qa&&ea>0&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglUV2Buffer),f.bufferData(f.ARRAY_BUFFER,ma,D));wa&&(f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),f.bufferData(f.ELEMENT_ARRAY_BUFFER,ga,D),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),f.bufferData(f.ELEMENT_ARRAY_BUFFER,Ga,D));
w>0&&(f.bindBuffer(f.ARRAY_BUFFER,n.__webglSkinVertexABuffer),f.bufferData(f.ARRAY_BUFFER,Y,D),f.bindBuffer(f.ARRAY_BUFFER,n.__webglSkinVertexBBuffer),f.bufferData(f.ARRAY_BUFFER,Z,D),f.bindBuffer(f.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),f.bufferData(f.ARRAY_BUFFER,$,D),f.bindBuffer(f.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),f.bufferData(f.ARRAY_BUFFER,aa,D));z&&(delete n.__inittedArrays,delete n.__colorArray,delete n.__normalArray,delete n.__tangentArray,delete n.__uvArray,delete n.__uv2Array,
delete n.__faceArray,delete n.__vertexArray,delete n.__lineArray,delete n.__skinVertexAArray,delete n.__skinVertexBArray,delete n.__skinIndexArray,delete n.__skinWeightArray)}h.__dirtyVertices=!1;h.__dirtyMorphTargets=!1;h.__dirtyElements=!1;h.__dirtyUvs=!1;h.__dirtyNormals=!1;h.__dirtyTangents=!1;h.__dirtyColors=!1;Ba(k)}else if(e instanceof THREE.Ribbon){h=e.geometry;if(h.__dirtyVertices||h.__dirtyColors){e=h;k=f.DYNAMIC_DRAW;j=C=void 0;u=e.vertices;o=e.colors;q=u.length;n=o.length;r=e.__vertexArray;
D=e.__colorArray;x=e.__dirtyColors;if(e.__dirtyVertices){for(z=0;z<q;z++)C=u[z].position,j=z*3,r[j]=C.x,r[j+1]=C.y,r[j+2]=C.z;f.bindBuffer(f.ARRAY_BUFFER,e.__webglVertexBuffer);f.bufferData(f.ARRAY_BUFFER,r,k)}if(x){for(z=0;z<n;z++)color=o[z],j=z*3,D[j]=color.r,D[j+1]=color.g,D[j+2]=color.b;f.bindBuffer(f.ARRAY_BUFFER,e.__webglColorBuffer);f.bufferData(f.ARRAY_BUFFER,D,k)}}h.__dirtyVertices=!1;h.__dirtyColors=!1}else if(e instanceof THREE.Line){h=e.geometry;if(h.__dirtyVertices||h.__dirtyColors){e=
h;k=f.DYNAMIC_DRAW;j=C=void 0;u=e.vertices;o=e.colors;q=u.length;n=o.length;r=e.__vertexArray;D=e.__colorArray;x=e.__dirtyColors;if(e.__dirtyVertices){for(z=0;z<q;z++)C=u[z].position,j=z*3,r[j]=C.x,r[j+1]=C.y,r[j+2]=C.z;f.bindBuffer(f.ARRAY_BUFFER,e.__webglVertexBuffer);f.bufferData(f.ARRAY_BUFFER,r,k)}if(x){for(z=0;z<n;z++)color=o[z],j=z*3,D[j]=color.r,D[j+1]=color.g,D[j+2]=color.b;f.bindBuffer(f.ARRAY_BUFFER,e.__webglColorBuffer);f.bufferData(f.ARRAY_BUFFER,D,k)}}h.__dirtyVertices=!1;h.__dirtyColors=
!1}else if(e instanceof THREE.ParticleSystem)h=e.geometry,n=v(h),(h.__dirtyVertices||h.__dirtyColors||e.sortParticles||n)&&m(h,f.DYNAMIC_DRAW,e),h.__dirtyVertices=!1,h.__dirtyColors=!1,Ba(h)};this.setFaceCulling=function(b,c){b?(!c||c=="ccw"?f.frontFace(f.CCW):f.frontFace(f.CW),b=="back"?f.cullFace(f.BACK):b=="front"?f.cullFace(f.FRONT):f.cullFace(f.FRONT_AND_BACK),f.enable(f.CULL_FACE)):f.disable(f.CULL_FACE)};this.supportsVertexTextures=function(){return Za}};
THREE.WebGLRenderTarget=function(b,c,d){this.width=b;this.height=c;d=d||{};this.wrapS=d.wrapS!==void 0?d.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=d.wrapT!==void 0?d.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=d.magFilter!==void 0?d.magFilter:THREE.LinearFilter;this.minFilter=d.minFilter!==void 0?d.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=d.format!==void 0?d.format:THREE.RGBAFormat;this.type=d.type!==void 0?d.type:
THREE.UnsignedByteType;this.depthBuffer=d.depthBuffer!==void 0?d.depthBuffer:!0;this.stencilBuffer=d.stencilBuffer!==void 0?d.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;return b};THREE.WebGLRenderTargetCube=function(b,c,d){THREE.WebGLRenderTarget.call(this,b,c,d);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;
